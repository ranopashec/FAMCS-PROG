{
	"nodes":[
		{"type":"text","text":"an expression that tells the CPU to interrupt the current function and execute another function","id":"cf25465c932aa72f","x":-481,"y":-479,"width":307,"height":126},
		{"type":"text","text":"function call","id":"d745426140532036","x":-402,"y":-333,"width":150,"height":55,"color":"6"},
		{"type":"text","text":"caller","id":"e06f0534cadf7f62","x":-820,"y":-383,"width":223,"height":50,"color":"6"},
		{"type":"text","text":"callee (called function)","id":"5df6503d9e36c6ec","x":-820,"y":-278,"width":223,"height":50,"color":"6"},
		{"type":"text","text":"The function initiating the function","id":"cd15b6005902e300","x":-865,"y":-463,"width":313,"height":55},
		{"type":"text","text":"the function being called","id":"4ed67efcbfbf215d","x":-865,"y":-200,"width":313,"height":60},
		{"type":"text","text":"# function","id":"f485708b2519feaa","x":-207,"y":-338,"width":201,"height":65,"color":"6"},
		{"type":"text","text":"Your main function should return the value 0 if the program ran normally.","id":"5a69f506892fab89","x":-2060,"y":42,"width":250,"height":125,"color":"4"},
		{"type":"text","text":"### value-returning functions","id":"e282eca247c8a019","x":-1567,"y":164,"width":335,"height":70,"color":"5"},
		{"type":"text","text":"A value-returning function that does not return a value will produce [undefined behavior](notes/studies/proga/c++/1.6%20—%20Uninitialized%20variables%20and%20undefined%20behavior.canvas)","id":"e94cc876f598e3f8","x":-2060,"y":204,"width":250,"height":120,"color":"1"},
		{"type":"text","text":"for example: function, that has no return statement","id":"f76e8b374b50b409","x":-2470,"y":222,"width":335,"height":85},
		{"type":"text","text":"return statement","id":"755ea6c6869174a3","x":-1612,"y":404,"width":185,"height":59,"color":"6"},
		{"type":"text","text":"return value","id":"6f3d0a05748ce2b1","x":-1004,"y":524,"width":150,"height":59,"color":"6"},
		{"type":"text","text":"When the return statement is executed, the function exits immediately, and the return value is copied from the function back to the caller","id":"326c9155e693330d","x":-1075,"y":720,"width":293,"height":153},
		{"type":"text","text":"A function that returns a value","id":"d290918763ea57da","x":-1545,"y":-20,"width":292,"height":65},
		{"type":"text","text":"A function that does not return a value","id":"c87c9e239e135fe2","x":-677,"y":157,"width":250,"height":84},
		{"type":"text","text":"early return","id":"3940e8ac316d9d6c","x":-2100,"y":-170,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"A return statement that is not the last statement in a function","id":"aeceaa359f400552","x":-1816,"y":-195,"width":271,"height":110},
		{"type":"text","text":"## function parameter","id":"4dcf836c3412cf37","x":-284,"y":920,"width":356,"height":84,"color":"6"},
		{"type":"text","text":"a variable used in the header of a function ","id":"bbe7ba10074ba512","x":120,"y":920,"width":272,"height":84},
		{"type":"text","text":"they are initialized with a value provided by the caller of the function","id":"9c815c54ceac3c95","x":440,"y":920,"width":280,"height":84},
		{"type":"text","text":"pass by value","id":"d7d71a70fc96c711","x":-610,"y":1084,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"When a function is called, all of the parameters of the function are created as variables, and the value of each of the arguments is _copied_ into the matching parameter.","id":"880a9b37163fad1a","x":-702,"y":1180,"width":435,"height":162},
		{"type":"text","text":"Function parameters and return values are the key mechanisms by which functions can be written in a reusable way, as it allows us to write functions that can perform tasks and return retrieved or calculated results back to the caller without knowing what the specific inputs or outputs are ahead of time.","id":"2eb7a4343978e64d","x":-166,"y":600,"width":573,"height":163,"color":"3"},
		{"type":"text","text":"a value that is passed _from_ the caller _to_ the function when a function call is made","id":"fee92d1615c8897c","x":-928,"y":962,"width":376,"height":80},
		{"type":"text","text":"##### Don’t Repeat Yourself (DRY)","id":"cbc31048fd056eeb","x":-873,"y":-760,"width":276,"height":80,"color":"4"},
		{"type":"text","text":"If you need to do something more than once, consider how to modify your code to remove as much redundancy as possible. Variables can be used to store the results of calculations that need to be used more than once (so we don’t have to repeat the calculation). Functions can be used to define a sequence of statements we want to execute more than once. ","id":"9c6c7c1d935a99a2","x":-1089,"y":-1160,"width":538,"height":200},
		{"type":"text","text":"Void functions can’t be used in expression that require a value","id":"689923271ca99be4","x":-866,"y":348,"width":301,"height":86},
		{"type":"text","text":"Void functions don’t need a return statement","id":"7385abb9170ac0dd","x":-552,"y":348,"width":293,"height":86},
		{"type":"text","text":"Function parameters, as well as variables defined inside the function body","id":"a9bde538f7af0036","x":-77,"y":1040,"width":384,"height":115},
		{"type":"text","text":"local variables","id":"dd132d9e5f680405","x":30,"y":1220,"width":170,"height":58,"color":"6"},
		{"type":"text","text":"creation and destruction happen when the program is running (runtime)","id":"109f7890bb3f5082","x":749,"y":1040,"width":332,"height":94},
		{"type":"text","text":"defined to be the time between its creation and destruction.","id":"f6fa4d8089faf09e","x":790,"y":1202,"width":250,"height":94},
		{"type":"text","text":"determines where the identifier can be seen and used within the source code.","id":"a9d53842bd385111","x":754,"y":1480,"width":291,"height":101},
		{"type":"text","text":"identifier’s scope","id":"a15e7e08dc8df86d","x":475,"y":1505,"width":221,"height":50,"color":"6"},
		{"type":"text","text":"When an identifier can not be seen","id":"317ab523055afe8f","x":580,"y":1685,"width":250,"height":60},
		{"type":"text","text":"when an identifier can be seen and used","id":"11316b512be58f48","x":305,"y":1685,"width":250,"height":60},
		{"type":"text","text":"in scope","id":"dc61b349c854c865","x":370,"y":1783,"width":121,"height":63,"color":"5"},
		{"type":"text","text":"out of scope","id":"b82a9821316f679f","x":628,"y":1783,"width":154,"height":63,"color":"5"},
		{"type":"text","text":"local variable’s lifetime ends at the point where it goes out of scope, so local variables are destroyed at this point","id":"82f8a7d49a572319","x":376,"y":1340,"width":420,"height":117},
		{"type":"text","text":"object’s lifetime","id":"0ce94bfcc720585b","x":461,"y":1219,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"lifetime is a runtime property","id":"8efc529a614e4013","x":461,"y":1057,"width":250,"height":60},
		{"type":"text","text":"Define your local variables as close to their first use as reasonable.","id":"2a791a5dea3bb517","x":-304,"y":1385,"width":303,"height":120,"color":"4"},
		{"type":"text","text":"local variables within a function can be named without regard for the names of variables in other functions.","id":"b15c61e11b15491a","x":-360,"y":1530,"width":303,"height":151,"color":"3"},
		{"type":"text","text":"tells the compiler about the existence of a function, the function’s name...","id":"da261d90214c2438","x":778,"y":23,"width":333,"height":90},
		{"type":"text","text":"This is where the statements that determine what your function does will go","id":"e53e969839c4d010","x":778,"y":579,"width":333,"height":98},
		{"type":"text","text":"Functions that you write yourself","id":"785d9b52d70b955d","x":12,"y":209,"width":250,"height":60},
		{"type":"text","text":"### user-defined functions.","id":"39e590e076ad3719","x":18,"y":304,"width":238,"height":99,"color":"5"},
		{"type":"text","text":"```cpp\nreturnType functionName() // This is the function header (tells the compiler about the existence of the function)\n{\n    // This is the function body (tells the compiler what the function does)\n}\n```","id":"2dd53b4100f84eeb","x":338,"y":234,"width":504,"height":229},
		{"type":"text","text":"function header","id":"2b48de8e01bc0d44","x":465,"y":38,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"function body","id":"c07ed6043a4b0f4a","x":465,"y":598,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"When addressing compile errors in your programs, always resolve the first error produced first and then compile again.","id":"0169b96310f84452","x":-304,"y":-12,"width":395,"height":101,"color":"4"},
		{"type":"text","text":"return type","id":"81b342c4cd22913f","x":-1816,"y":405,"width":160,"height":59,"color":"6"},
		{"type":"text","text":"```cpp\n#include <iostream>\n\n// x is not in scope anywhere in this function\nvoid doSomething()\n{\n    std::cout << \"Hello!\\n\";\n}\n\nint main()\n{\n    // x can not be used here because it's not in scope yet\n\n    int x{ 0 }; // x enters scope here and can now be used within this function\n\n    doSomething();\n\n    return 0;\n} // x goes out of scope here and can no longer be used\n```","id":"41f3f914212242c2","x":1081,"y":1285,"width":777,"height":491},
		{"type":"text","text":"Definition ","id":"a6dcf591b9f73557","x":407,"y":-449,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"Declaration","id":"ffaceef0b5dd0837","x":404,"y":-338,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"actually instantiates/implements this identifier","id":"d774deed4c6c8394","x":407,"y":-593,"width":250,"height":114},
		{"type":"text","text":"what the linker needs","id":"a4af56bcf97b10f2","x":407,"y":-680,"width":250,"height":60},
		{"type":"text","text":" introduces an identifier and describes its type","id":"1c574de1121f2b25","x":404,"y":-169,"width":250,"height":95},
		{"type":"text","text":"```cpp\nint add(int x, int y); // tells the compiler about a function named \"add\" that takes two int parameters and returns an int.  No body!\nint x;                 // tells the compiler about an integer variable named x\n```","id":"1642cc3b8b97672a","x":977,"y":-234,"width":454,"height":226},
		{"type":"text","text":"what the compiler needs","id":"44bc850ad06c65c5","x":692,"y":-151,"width":250,"height":60},
		{"type":"text","text":"# forward declaration","id":"c0f8bb2871ae8f73","x":1502,"y":-361,"width":248,"height":106,"color":"6"},
		{"type":"text","text":"function declaration (function prototype)","id":"dcea27e4039232f0","x":1518,"y":-155,"width":216,"height":80,"color":"6"},
		{"type":"text","text":"allows us to tell the compiler about the existence of an identifier _before_ actually defining the identifier","id":"64952be20aa8116c","x":1791,"y":-364,"width":336,"height":113},
		{"type":"text","text":"consists of the function’s return type, name, and parameter types, terminated with a semicolon.","id":"b83025e3af8f2a70","x":1791,"y":-171,"width":336,"height":112},
		{"type":"text","text":"```cpp\nint add(int x, int y); //  No function body!\n```","id":"929db031ada3bcf2","x":2151,"y":-155,"width":526,"height":84},
		{"type":"text","text":"Keep the parameter names in your function declarations.","id":"81e5acaddcb99207","x":1480,"y":-35,"width":292,"height":80,"color":"4"},
		{"type":"text","text":"a reusable sequence of statements designed to do a particular job","id":"1fdbe801fd86e3be","x":-29,"y":-510,"width":240,"height":95},
		{"type":"text","text":"Don’t forget to include parentheses () after the function’s name when making a function call.","id":"c8245bb769af0f20","x":1030,"y":281,"width":333,"height":136,"color":"1"},
		{"type":"text","text":"### argument","id":"03267932adb1b9dd","x":-576,"y":514,"width":183,"height":69,"color":"6"},
		{"type":"text","text":"### Void function\n(non-value returning function)","id":"e4f4f0e140064d16","x":-991,"y":138,"width":275,"height":123,"color":"5"},
		{"type":"text","text":"```cpp\n#include <iostream>\n\nint main()\n{\n    void foo() // Illegal: this function is nested inside function main()\n    {\n        std::cout << \"foo!\\n\";\n    }\n\n    foo(); // function call to foo()\n    return 0;\n}\n```","id":"4da2286726279932","x":-1228,"y":-1543,"width":710,"height":360},
		{"type":"text","text":"Nested functions are not supported","id":"c444cfee1b34dda1","x":-481,"y":-1030,"width":229,"height":87,"color":"1"},
		{"type":"text","text":"[c++](notes/areas/programming/c++/textbook/0.%20CPP.canvas)","id":"b393603dc50df377","x":-168,"y":-826,"width":124,"height":55,"color":"3"},
		{"type":"text","text":"### one definition rule:\n1. Within a given _file_, a function, variable, type, or template can only have one definition.\n2. Within a given _program_, a variable or normal function can only have one definition. \n3. Types, templates, inline functions, and inline variables are allowed to have identical definitions in different files. ","id":"c5f96aeeb0e5ecff","x":739,"y":-638,"width":475,"height":285,"color":"4"},
		{"type":"text","text":"```cpp\nint add(int x, int y) // definition of function add()\n{\n    int z{ x + y };   // definition of variable z\n\n    return z;\n}\n```","id":"5c94fc19154164e4","x":749,"y":-926,"width":454,"height":256},
		{"type":"text","text":"```cpp\nreturnType functionName() // function header\n{\n    // This is the function body (tells the compiler what the function does)\n}","id":"aa2a11eb7142df3d","x":38,"y":-945,"width":412,"height":239},
		{"type":"text","text":"Preprocessor","id":"68b229a304efc1ae","x":64,"y":-1223,"width":193,"height":50,"color":"6"},
		{"type":"text","text":"makes various changes to the text of the code file in","id":"44f172a765bd74ed","x":297,"y":-1236,"width":320,"height":77},
		{"type":"text","text":"translation unit","id":"e6e9495d3762cf7e","x":407,"y":-1117,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"preprocessing phase","id":"6055cda338a06b9c","x":657,"y":-1225,"width":247,"height":56,"color":"6"},
		{"type":"text","text":"result of preprocessor's work","id":"ceeba6cbe015dc38","x":64,"y":-1123,"width":322,"height":72},
		{"type":"text","text":"translation","id":"18e5f7cbce2b1418","x":712,"y":-1477,"width":138,"height":50,"color":"6"},
		{"type":"text","text":"The entire process of preprocessing, compiling, and linking","id":"b8e0d58b51790825","x":904,"y":-1500,"width":309,"height":97},
		{"type":"text","text":"Preprocessor directives","id":"85205af778a8bd3a","x":977,"y":-1084,"width":250,"height":54,"color":"6"},
		{"type":"text","text":"Instructions that start with a _#_ symbol and end with a newline (NOT a semicolon). Tell the preprocessor to perform certain text manipulation tasks, outside of C++ syntax","id":"5bb10d9a74458e58","x":1257,"y":-1133,"width":440,"height":152},
		{"type":"text","text":"allow us to put declarations in one location and then import them wherever we need them","id":"ba2709e323a14eeb","x":273,"y":-1486,"width":384,"height":119},
		{"type":"text","text":"[header file](https://www.learncpp.com/cpp-tutorial/header-files/)","id":"a2b53769f5e9dce5","x":77,"y":-1456,"width":163,"height":58,"color":"6"},
		{"type":"text","text":"[header guards](https://www.learncpp.com/cpp-tutorial/header-guards/) ","id":"48a83b59cc39495d","x":367,"y":-1340,"width":250,"height":60,"color":"6"}
	],
	"edges":[
		{"id":"d15d558d15d4947e","fromNode":"f485708b2519feaa","fromSide":"bottom","toNode":"39e590e076ad3719","toSide":"left"},
		{"id":"c5133665adde53e8","fromNode":"39e590e076ad3719","fromSide":"top","toNode":"785d9b52d70b955d","toSide":"bottom","toEnd":"none"},
		{"id":"c6242a34c7b13b27","fromNode":"f485708b2519feaa","fromSide":"left","toNode":"d745426140532036","toSide":"right"},
		{"id":"c310bee402726759","fromNode":"d745426140532036","fromSide":"top","toNode":"cf25465c932aa72f","toSide":"bottom","toEnd":"none"},
		{"id":"3435684c1a7eeba9","fromNode":"d745426140532036","fromSide":"left","toNode":"e06f0534cadf7f62","toSide":"right"},
		{"id":"d87f60e2b8c925af","fromNode":"d745426140532036","fromSide":"left","toNode":"5df6503d9e36c6ec","toSide":"right"},
		{"id":"d75eff11951e9303","fromNode":"e06f0534cadf7f62","fromSide":"top","toNode":"cd15b6005902e300","toSide":"bottom","toEnd":"none"},
		{"id":"de9a41ad51c9c2a9","fromNode":"5df6503d9e36c6ec","fromSide":"bottom","toNode":"4ed67efcbfbf215d","toSide":"top","toEnd":"none"},
		{"id":"b8b3d3a8c08d69ec","fromNode":"785d9b52d70b955d","fromSide":"right","toNode":"2dd53b4100f84eeb","toSide":"left"},
		{"id":"0b8ea5c50bcba7bc","fromNode":"2dd53b4100f84eeb","fromSide":"top","toNode":"2b48de8e01bc0d44","toSide":"bottom","label":"1st line"},
		{"id":"b7d6179241961ab9","fromNode":"2b48de8e01bc0d44","fromSide":"right","toNode":"da261d90214c2438","toSide":"left","toEnd":"none"},
		{"id":"f35bec980063c765","fromNode":"2dd53b4100f84eeb","fromSide":"bottom","toNode":"c07ed6043a4b0f4a","toSide":"top","label":"The curly braces and statements in-between"},
		{"id":"03f04637a5516796","fromNode":"c07ed6043a4b0f4a","fromSide":"right","toNode":"e53e969839c4d010","toSide":"left","toEnd":"none"},
		{"id":"ef63f4670a891098","fromNode":"c8245bb769af0f20","fromSide":"left","toNode":"2dd53b4100f84eeb","toSide":"right"},
		{"id":"db792ae1f8d6aea2","fromNode":"c444cfee1b34dda1","fromSide":"top","toNode":"4da2286726279932","toSide":"right"},
		{"id":"905582f35070d648","fromNode":"f485708b2519feaa","fromSide":"bottom","toNode":"e282eca247c8a019","toSide":"top"},
		{"id":"28161110c57a86f8","fromNode":"e282eca247c8a019","fromSide":"bottom","toNode":"81b342c4cd22913f","toSide":"top"},
		{"id":"d5329b163af1dbc8","fromNode":"e282eca247c8a019","fromSide":"bottom","toNode":"755ea6c6869174a3","toSide":"top"},
		{"id":"9dca66918a25a245","fromNode":"6f3d0a05748ce2b1","fromSide":"bottom","toNode":"326c9155e693330d","toSide":"top","label":"return by value"},
		{"id":"0a74d5de52e11563","fromNode":"5a69f506892fab89","fromSide":"right","toNode":"e282eca247c8a019","toSide":"left"},
		{"id":"61859ecc517c5d0a","fromNode":"e282eca247c8a019","fromSide":"top","toNode":"d290918763ea57da","toSide":"bottom","toEnd":"none"},
		{"id":"53565e06d9277548","fromNode":"e94cc876f598e3f8","fromSide":"right","toNode":"e282eca247c8a019","toSide":"left"},
		{"id":"f23620337fcf0ad0","fromNode":"e94cc876f598e3f8","fromSide":"left","toNode":"f76e8b374b50b409","toSide":"right"},
		{"id":"2a09bc20a6fe7e2b","fromNode":"e282eca247c8a019","fromSide":"bottom","toNode":"6f3d0a05748ce2b1","toSide":"top","label":"Functions can only return a single value"},
		{"id":"d07dba19c7bb1348","fromNode":"f485708b2519feaa","fromSide":"top","toNode":"cbc31048fd056eeb","toSide":"right"},
		{"id":"d16ffac45dc78c62","fromNode":"cbc31048fd056eeb","fromSide":"top","toNode":"9c6c7c1d935a99a2","toSide":"bottom","toEnd":"none","label":"central tenets of good programming"},
		{"id":"2bfe4c876eebc9d0","fromNode":"f485708b2519feaa","fromSide":"bottom","toNode":"e4f4f0e140064d16","toSide":"top"},
		{"id":"6bad24f6cb423be1","fromNode":"e4f4f0e140064d16","fromSide":"right","toNode":"c87c9e239e135fe2","toSide":"left","toEnd":"none"},
		{"id":"82080d376c7d3139","fromNode":"c87c9e239e135fe2","fromSide":"bottom","toNode":"7385abb9170ac0dd","toSide":"top"},
		{"id":"09de406fbfcdb1b8","fromNode":"c87c9e239e135fe2","fromSide":"bottom","toNode":"689923271ca99be4","toSide":"top"},
		{"id":"27d928d8abce5788","fromNode":"e282eca247c8a019","fromSide":"top","toNode":"3940e8ac316d9d6c","toSide":"bottom"},
		{"id":"180c480766d321e7","fromNode":"3940e8ac316d9d6c","fromSide":"right","toNode":"aeceaa359f400552","toSide":"left","toEnd":"none"},
		{"id":"e18bb0aa0e6f6e85","fromNode":"f485708b2519feaa","fromSide":"bottom","toNode":"4dcf836c3412cf37","toSide":"top"},
		{"id":"626ef5911b9f1275","fromNode":"4dcf836c3412cf37","fromSide":"right","toNode":"bbe7ba10074ba512","toSide":"left","toEnd":"none"},
		{"id":"9b9466088ac60852","fromNode":"bbe7ba10074ba512","fromSide":"right","toNode":"9c815c54ceac3c95","toSide":"left"},
		{"id":"031ed5157036185c","fromNode":"4dcf836c3412cf37","fromSide":"left","toNode":"d7d71a70fc96c711","toSide":"top"},
		{"id":"454457cb5e94a40a","fromNode":"03267932adb1b9dd","fromSide":"bottom","toNode":"d7d71a70fc96c711","toSide":"top"},
		{"id":"5f52a410f0c16fc6","fromNode":"d7d71a70fc96c711","fromSide":"bottom","toNode":"880a9b37163fad1a","toSide":"top","toEnd":"none"},
		{"id":"59a302e1c0d42abf","fromNode":"6f3d0a05748ce2b1","fromSide":"right","toNode":"03267932adb1b9dd","toSide":"left","label":"can be used as"},
		{"id":"5da0d4ed7f443c91","fromNode":"4dcf836c3412cf37","fromSide":"left","toNode":"03267932adb1b9dd","toSide":"right"},
		{"id":"1f17ea046ce9fcf3","fromNode":"03267932adb1b9dd","fromSide":"bottom","toNode":"fee92d1615c8897c","toSide":"top","toEnd":"none"},
		{"id":"a24568cbaa4e98cf","fromNode":"4dcf836c3412cf37","fromSide":"top","toNode":"2eb7a4343978e64d","toSide":"bottom"},
		{"id":"4998ab0dbbccd385","fromNode":"4dcf836c3412cf37","fromSide":"bottom","toNode":"dd132d9e5f680405","toSide":"left"},
		{"id":"eaa585628fbe06f7","fromNode":"dd132d9e5f680405","fromSide":"top","toNode":"a9bde538f7af0036","toSide":"bottom","toEnd":"none"},
		{"id":"f00711545948355e","fromNode":"dd132d9e5f680405","fromSide":"right","toNode":"0ce94bfcc720585b","toSide":"left"},
		{"id":"e45acf90e0e4d29b","fromNode":"0ce94bfcc720585b","fromSide":"right","toNode":"f6fa4d8089faf09e","toSide":"left","toEnd":"none"},
		{"id":"f6b319eb9820f9d9","fromNode":"f6fa4d8089faf09e","fromSide":"top","toNode":"109f7890bb3f5082","toSide":"bottom"},
		{"id":"32aeb01dae272fdb","fromNode":"109f7890bb3f5082","fromSide":"left","toNode":"8efc529a614e4013","toSide":"right"},
		{"id":"9b354470fdd21010","fromNode":"8efc529a614e4013","fromSide":"bottom","toNode":"0ce94bfcc720585b","toSide":"top"},
		{"id":"9d54e176c82c6db9","fromNode":"a15e7e08dc8df86d","fromSide":"right","toNode":"a9d53842bd385111","toSide":"left","toEnd":"none"},
		{"id":"d7365b142b3d39c5","fromNode":"a15e7e08dc8df86d","fromSide":"bottom","toNode":"11316b512be58f48","toSide":"top"},
		{"id":"bfe8514051414e0f","fromNode":"11316b512be58f48","fromSide":"bottom","toNode":"dc61b349c854c865","toSide":"top"},
		{"id":"50aff0f1651136ee","fromNode":"a15e7e08dc8df86d","fromSide":"bottom","toNode":"317ab523055afe8f","toSide":"top"},
		{"id":"d1a7c941d996618e","fromNode":"317ab523055afe8f","fromSide":"bottom","toNode":"b82a9821316f679f","toSide":"top"},
		{"id":"797962f19fed5bc3","fromNode":"a9d53842bd385111","fromSide":"right","toNode":"41f3f914212242c2","toSide":"left"},
		{"id":"67cca0243f1932ca","fromNode":"0ce94bfcc720585b","fromSide":"bottom","toNode":"82f8a7d49a572319","toSide":"top"},
		{"id":"ed96de740fc689b3","fromNode":"82f8a7d49a572319","fromSide":"bottom","toNode":"a15e7e08dc8df86d","toSide":"top"},
		{"id":"45d458a16000a087","fromNode":"2a791a5dea3bb517","fromSide":"right","toNode":"dd132d9e5f680405","toSide":"bottom"},
		{"id":"18ef640fa1a072a5","fromNode":"b15c61e11b15491a","fromSide":"right","toNode":"dd132d9e5f680405","toSide":"bottom"},
		{"id":"de7d7cf45fbd6ada","fromNode":"c0f8bb2871ae8f73","fromSide":"right","toNode":"64952be20aa8116c","toSide":"left","toEnd":"none"},
		{"id":"34c8b3b3091ac6e7","fromNode":"c0f8bb2871ae8f73","fromSide":"bottom","toNode":"dcea27e4039232f0","toSide":"top"},
		{"id":"ecaca20d5cb6315c","fromNode":"dcea27e4039232f0","fromSide":"right","toNode":"b83025e3af8f2a70","toSide":"left","toEnd":"none"},
		{"id":"afa700a9bfbc8445","fromNode":"b83025e3af8f2a70","fromSide":"right","toNode":"929db031ada3bcf2","toSide":"left"},
		{"id":"3ba751a3d9e5ad49","fromNode":"81e5acaddcb99207","fromSide":"top","toNode":"dcea27e4039232f0","toSide":"bottom"},
		{"id":"c25cf818e3de06b4","fromNode":"a6dcf591b9f73557","fromSide":"top","toNode":"d774deed4c6c8394","toSide":"bottom","toEnd":"none"},
		{"id":"5c0a3298df82f065","fromNode":"ffaceef0b5dd0837","fromSide":"bottom","toNode":"1c574de1121f2b25","toSide":"top","toEnd":"none"},
		{"id":"abb07ff4f8667866","fromNode":"1fdbe801fd86e3be","fromSide":"bottom","toNode":"f485708b2519feaa","toSide":"right","toEnd":"none"},
		{"id":"dda8320a2b2847e0","fromNode":"f485708b2519feaa","fromSide":"right","toNode":"a6dcf591b9f73557","toSide":"left"},
		{"id":"65ceff9d2ebd2e57","fromNode":"f485708b2519feaa","fromSide":"right","toNode":"ffaceef0b5dd0837","toSide":"left"},
		{"id":"c997caf4dd24fcc2","fromNode":"1c574de1121f2b25","fromSide":"right","toNode":"44bc850ad06c65c5","toSide":"left","toEnd":"none"},
		{"id":"fbe0f6506644710e","fromNode":"44bc850ad06c65c5","fromSide":"right","toNode":"1642cc3b8b97672a","toSide":"left"},
		{"id":"b7b90b63b01e2dd9","fromNode":"d774deed4c6c8394","fromSide":"top","toNode":"a4af56bcf97b10f2","toSide":"bottom"},
		{"id":"1fd6c42eacee2c8e","fromNode":"ffaceef0b5dd0837","fromSide":"right","toNode":"c0f8bb2871ae8f73","toSide":"left"},
		{"id":"6dde626077cd7390","fromNode":"c5f96aeeb0e5ecff","fromSide":"left","toNode":"a6dcf591b9f73557","toSide":"right"},
		{"id":"07ec8d069b0511e6","fromNode":"1fdbe801fd86e3be","fromSide":"top","toNode":"aa2a11eb7142df3d","toSide":"bottom"},
		{"id":"ef84bc0e0180f679","fromNode":"c444cfee1b34dda1","fromSide":"bottom","toNode":"f485708b2519feaa","toSide":"top"},
		{"id":"0d84b29d07fe3ae4","fromNode":"b393603dc50df377","fromSide":"bottom","toNode":"f485708b2519feaa","toSide":"top","toEnd":"none"},
		{"id":"f734f180e40e2ba2","fromNode":"b393603dc50df377","fromSide":"top","toNode":"a2b53769f5e9dce5","toSide":"left"},
		{"id":"3c1780468a55aa79","fromNode":"a4af56bcf97b10f2","fromSide":"top","toNode":"5c94fc19154164e4","toSide":"left"},
		{"id":"2987e863f46b0a80","fromNode":"a2b53769f5e9dce5","fromSide":"right","toNode":"ba2709e323a14eeb","toSide":"left","toEnd":"none"},
		{"id":"c98233f70e2f107b","fromNode":"b393603dc50df377","fromSide":"top","toNode":"68b229a304efc1ae","toSide":"left"},
		{"id":"10a3a415579abc91","fromNode":"68b229a304efc1ae","fromSide":"right","toNode":"44f172a765bd74ed","toSide":"left","toEnd":"none"},
		{"id":"0b1ec98ba9f0b093","fromNode":"44f172a765bd74ed","fromSide":"right","toNode":"6055cda338a06b9c","toSide":"left"},
		{"id":"1f4a617cbafc2535","fromNode":"6055cda338a06b9c","fromSide":"bottom","toNode":"e6e9495d3762cf7e","toSide":"right"},
		{"id":"b292581c6cbd3096","fromNode":"e6e9495d3762cf7e","fromSide":"left","toNode":"ceeba6cbe015dc38","toSide":"right","toEnd":"none"},
		{"id":"9310b4f95c2f0819","fromNode":"18e5f7cbce2b1418","fromSide":"right","toNode":"b8e0d58b51790825","toSide":"left","toEnd":"none"},
		{"id":"4ea43897d597fdbb","fromNode":"18e5f7cbce2b1418","fromSide":"bottom","toNode":"6055cda338a06b9c","toSide":"top"},
		{"id":"7540eee90fa6d4cb","fromNode":"6055cda338a06b9c","fromSide":"right","toNode":"85205af778a8bd3a","toSide":"top"},
		{"id":"f3fb0dfa85de3f18","fromNode":"85205af778a8bd3a","fromSide":"right","toNode":"5bb10d9a74458e58","toSide":"left","toEnd":"none"},
		{"id":"47990720fbf2a6fe","fromNode":"a2b53769f5e9dce5","fromSide":"bottom","toNode":"48a83b59cc39495d","toSide":"left"},
		{"id":"ade48eb2070023ed","fromNode":"48a83b59cc39495d","fromSide":"right","toNode":"6055cda338a06b9c","toSide":"top"}
	]
}