{
	"nodes":[
		{"type":"text","text":"global variables","id":"ac48b05bb1f78119","x":2480,"y":109,"width":250,"height":60,"color":"5"},
		{"type":"text","text":"variables, declared outside of a function","id":"4971136d2ffccca8","x":2760,"y":114,"width":373,"height":50},
		{"type":"text","text":"global variables are declared at the top of a file, below the includes, but above any code. Consider using a “g” or “g_” prefix when naming non-const global variables","id":"2b9cbc18e0742c76","x":2352,"y":-40,"width":506,"height":120},
		{"type":"text","text":"storage duration","id":"81e98b1dfb5f3e3f","x":141,"y":464,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"automatic storage duration","id":"cb32524d87d71a12","x":415,"y":713,"width":274,"height":50,"color":"6"},
		{"type":"text","text":"they are created at the point of definition and destroyed at the end of the block they are defined in (about local var)","id":"f7796acbcbe39005","x":279,"y":802,"width":545,"height":83},
		{"type":"text","text":"internal linkage","id":"4f815059ec8271af","x":1761,"y":1130,"width":189,"height":50,"color":"5"},
		{"type":"text","text":"determines whether other declarations of that name refer to the same object or not","id":"ce5e8bf4930bc19d","x":2229,"y":-320,"width":320,"height":94},
		{"type":"text","text":"identifier’s linkage","id":"0e73c23db4264016","x":1949,"y":-303,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"identifier","id":"dd65a9b178cff47f","x":1593,"y":-301,"width":155,"height":55,"color":"6"},
		{"type":"text","text":"means they are _in scope_ from their point of definition to the end of the block they are defined within","id":"21e4716bd0b63122","x":951,"y":386,"width":474,"height":71},
		{"type":"text","text":"ested variable “hides” the outer variable in areas where they are both in scope","id":"0501f759a1cceca1","x":1517,"y":371,"width":322,"height":101},
		{"type":"text","text":"name hiding (shadowing)","id":"76f1152bf0aa095b","x":1602,"y":490,"width":151,"height":67,"color":"6"},
		{"type":"text","text":"`std::swap()`","id":"17ca68eb2d8d1946","x":1364,"y":-13,"width":187,"height":57},
		{"type":"text","text":"swap the values of two variables","id":"98b03b57a28eb75f","x":1352,"y":48,"width":209,"height":71},
		{"type":"text","text":"`<utility>` header","id":"b99ea786f0e73a59","x":1060,"y":-17,"width":250,"height":64},
		{"type":"text","text":"local variables with the same name as a global variable will shadow the global variable","id":"e3a18ec2d6279851","x":1888,"y":468,"width":298,"height":111},
		{"type":"text","text":"`static` keyword (1)","id":"9addc4118b46ee59","x":2209,"y":532,"width":231,"height":50,"color":"6"},
		{"type":"text","text":"variables","id":"cd35a9c5f3219eac","x":1593,"y":-17,"width":167,"height":62,"color":"6"},
		{"type":"text","text":"linkage","id":"78395ba55b1d9d2a","x":1506,"y":836,"width":133,"height":50,"color":"6"},
		{"type":"text","text":"`extern` keyword","id":"2c1b7c70cd952e45","x":2894,"y":449,"width":195,"height":50,"color":"6"},
		{"type":"text","text":"external variables","id":"d9cda2962e6cf4ba","x":2866,"y":666,"width":250,"height":60,"color":"5"},
		{"type":"text","text":"external linkage","id":"3d0b48f74e89ea95","x":2898,"y":836,"width":187,"height":50,"color":"5"},
		{"type":"text","text":"An identifier with external linkage can be seen and used both from the file in which it is defined, and from other code files (via a forward declaration)","id":"12a49b4e3e02f0e3","x":2762,"y":909,"width":459,"height":122},
		{"type":"text","text":"don't miss forward declaration","id":"60a8e38af7a1eb14","x":3069,"y":552,"width":250,"height":63,"color":"1"},
		{"type":"text","text":"- determines whether other declarations of that name refer to the same object or not.\n- determines whether the variable can be exported to another file or not","id":"50e778cfe962e8b3","x":1345,"y":640,"width":456,"height":131},
		{"type":"text","text":"Use local variables instead of global variables whenever possible","id":"f1bcd9ad319a5d67","x":1949,"y":-25,"width":349,"height":78,"color":"4"},
		{"type":"text","text":"aka automatic variables","id":"dbceb43669edb623","x":-150,"y":468,"width":260,"height":62,"color":"6"},
		{"type":"text","text":"inline variables (c++17)","id":"1171bf25b8889a16","x":1529,"y":163,"width":297,"height":55,"color":"5"},
		{"type":"text","text":"are allowed to be defined in multiple files without violating the one definition rule. Have external linkage be default.","id":"2d511639347080cf","x":1188,"y":240,"width":374,"height":104},
		{"type":"text","text":"means visible from the point of declaration until the end of the _file_ in which they are declared","id":"435c9413091618dc","x":3133,"y":340,"width":317,"height":115},
		{"type":"text","text":"file scope (global scope or global namespace scope)","id":"28eb795255dd24bd","x":3145,"y":240,"width":293,"height":80,"color":"6"},
		{"type":"text","text":"static duration","id":"49f38fae7b19f0c4","x":2405,"y":394,"width":200,"height":55,"color":"6"},
		{"type":"text","text":"block scope","id":"b3b89b435dfbf8f4","x":532,"y":505,"width":250,"height":50,"color":"6"},
		{"type":"text","text":"determines what rules govern when and how a variable will be created and destroyed","id":"898a077f572da772","x":391,"y":580,"width":424,"height":81},
		{"type":"text","text":"Avoid `static` local variables unless the variable never needs to be reset.","id":"32eb5dcdda358fb6","x":187,"y":-9,"width":345,"height":93,"color":"4"},
		{"type":"text","text":"Local variables can be defined inside nested blocks","id":"67c39c41650f4569","x":187,"y":115,"width":298,"height":97},
		{"type":"text","text":"local variables","id":"176d915b8d136be5","x":558,"y":139,"width":199,"height":50,"color":"5"},
		{"type":"text","text":"defines the local variable as having static duration, meaning the variable will only be created once, and will not be destroyed until the end of the program","id":"52c7ab3f3e5a14a8","x":-650,"y":560,"width":500,"height":122},
		{"type":"text","text":"`static` keyword (2)","id":"83218b96336cd0d2","x":-515,"y":472,"width":231,"height":54,"color":"6"},
		{"type":"text","text":"Global variables are created when the program starts, and destroyed when it ends","id":"0e4cc012e7b5149f","x":2505,"y":557,"width":314,"height":115},
		{"type":"text","text":"storage class specifiers","id":"6dcecc668cece7a4","x":2537,"y":706,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"set the storage duration and linkage of the identifier","id":"33578d497acf6415","x":2514,"y":780,"width":297,"height":66},
		{"type":"text","text":"To set function to internal linkage","id":"80ca1c4f57ee6345","x":2199,"y":761,"width":251,"height":66},
		{"type":"text","text":"namespase","id":"29061bfcddda6fa0","x":1546,"y":-880,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"program-defined namespaces (user-defined namespaces)","id":"b604b4807d6d2647","x":1888,"y":-890,"width":326,"height":80,"color":"5"},
		{"type":"text","text":"qualified name","id":"060e6407960302f2","x":1928,"y":-766,"width":196,"height":60,"color":"6"},
		{"type":"text","text":"unqualified name","id":"07a798d1eb84855a","x":1928,"y":-423,"width":196,"height":60,"color":"6"},
		{"type":"text","text":"using declaration","id":"ac6f127ec4dd38c2","x":2438,"y":-587,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"```cpp\nnamespace active = foo::goo; // active now refers to foo::goo\nstd::cout << active::add(1, 2) << '\\n'; // This is really foo::goo::add()\n```","id":"25b09f46cd62d5fa","x":2929,"y":-917,"width":523,"height":135},
		{"type":"text","text":"scope resolution operator `::`","id":"ecbb171ff95db5ae","x":2556,"y":-875,"width":329,"height":50,"color":"6"},
		{"type":"text","text":"s a name that includes an associated scope","id":"f61c28c875aea55a","x":2574,"y":-782,"width":293,"height":92},
		{"type":"text","text":"`cout` and `x` are unqualified names, as they do not include an associated scope","id":"6ce1d51d1b16a95c","x":2929,"y":-448,"width":387,"height":94},
		{"type":"text","text":"a name that does not include a scoping qualifier","id":"ce80ec49967a7e07","x":2567,"y":-440,"width":307,"height":77},
		{"type":"text","text":"Using directives","id":"2cade2018b6f5791","x":1332,"y":-586,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"```cpp\n{\n   using std::cout; // this using declaration tells the compiler that cout should resolve to std::cout\n   cout << \"Hello world!\\n\"; // so no std:: prefix is needed here!\n\n   return 0;\n} // the using declaration expires here\n```","id":"d237ed10a15105c9","x":3340,"y":-697,"width":560,"height":280},
		{"type":"text","text":"allows us to use an unqualified name (with no scope) as an alias for a qualified name","id":"2d62c05c46a76dc7","x":2845,"y":-598,"width":417,"height":83},
		{"type":"text","text":"Avoid `using directives` (particularly `using namespace std;`), except in specific circumstances (such as `using namespace std::literals` to access the `s` and `sv` literal suffixes).","id":"b1fb31e60f0a4925","x":1123,"y":-376,"width":438,"height":150,"color":"4"},
		{"type":"text","text":"```cpp\n{\n   using namespace std; // this using directive tells the compiler to import all names from namespace std into the current namespace without qualification\n   cout << \"Hello world!\\n\"; // so no std:: prefix is needed here\n   return 0;\n}\n```","id":"85d1fc4140d5a40c","x":680,"y":-681,"width":605,"height":251},
		{"type":"text","text":"```cpp\nint main()\n{ // block 1, nesting level 1\n    std::cout << \"Enter an integer: \";\n    int value {};\n    std::cin >> value;\n    if (value >  0)\n    { // block 2, nesting level 2\n        if ((value % 2) == 0)\n        { // block 3, nesting level 3\n            std::cout << value << \" is positive and even\\n\";\n        }\n        else\n        { // block 4, also nesting level 3\n            std::cout << value << \" is positive and odd\\n\";\n        }\n    }\n}\n```","id":"b1a5ddca5adadaa8","x":-973,"y":-545,"width":867,"height":480},
		{"type":"text","text":"The **nesting level** (the **nesting depth**) of a function is the maximum number of nested blocks you can be inside at any point in the function (including the outer block). (256)","id":"e7ad5ef6ed6d39bb","x":-770,"y":95,"width":460,"height":137},
		{"type":"text","text":"Blocks _can be_ nested inside other blocks. Enclosing block is  the **outer block** and the enclosed block is the **inner block** or **nested block**","id":"f7fb16f628f851c8","x":-270,"y":103,"width":380,"height":120},
		{"type":"text","text":"functions","id":"663d2c6fc02f8a8b","x":749,"y":-115,"width":133,"height":50,"color":"6"},
		{"type":"text","text":"A compound statement \n(block or block statement)","id":"70617375b3cb3357","x":-210,"y":-893,"width":260,"height":87,"color":"6"},
		{"type":"text","text":" is a group of _zero or more statements_ that is treated by the compiler as if it were a single statement.","id":"d0b205b4fc7124f2","x":-650,"y":-899,"width":380,"height":99},
		{"type":"text","text":"eligible for compile-time evaluation","id":"59426e6ec9e51718","x":336,"y":-120,"width":259,"height":61},
		{"type":"text","text":"constexpr function","id":"db85eef62cda1b22","x":341,"y":-226,"width":250,"height":60,"color":"5"},
		{"type":"text","text":"s a function whose return value may be computed at compile-time","id":"13e60b87beb2aabd","x":-4,"y":-243,"width":310,"height":95},
		{"type":"text","text":"_must_ evaluate at compile-time","id":"995001190a339924","x":341,"y":-351,"width":250,"height":65},
		{"type":"text","text":"consteval (immediate functions) С++20","id":"eacab808b0a81a02","x":60,"y":-366,"width":246,"height":96,"color":"5"},
		{"type":"text","text":"```cpp\nstd::cout // identifier cout is qualified by namespace std\n::foo // identifier foo is qualified by the global namespace\n```","id":"b9bde61e2c3d9b69","x":2788,"y":-1040,"width":664,"height":100},
		{"type":"text","text":"unnamed namespace\n( anonymous namespace)","id":"84172049928f5ff0","x":1796,"y":-1033,"width":285,"height":87,"color":"5"},
		{"type":"text","text":"inline namespace","id":"88425d3f58c610d1","x":1796,"y":-1180,"width":230,"height":60,"color":"5"},
		{"type":"text","text":"anything declared inside an `inline namespace` is considered part of the parent namespace. However, `inline namespaces` don’t give everything `internal linkage`","id":"182d7bc92dc4aaa0","x":2101,"y":-1220,"width":419,"height":140},
		{"type":"text","text":"the content of an `unnamed namespace` can’t be seen outside of the file in which the `unnamed namespace` is defined","id":"0f823abc43d1e840","x":2101,"y":-1048,"width":419,"height":118},
		{"type":"text","text":"internal variable","id":"f3f11de860a72abe","x":1889,"y":1001,"width":222,"height":60,"color":"5"},
		{"type":"text","text":"Global variables with internal linkage","id":"84f1535e70e19ba1","x":1629,"y":981,"width":250,"height":101},
		{"type":"text","text":"To make a non-constant global variable","id":"650908430973d24e","x":1857,"y":886,"width":286,"height":60},
		{"type":"text","text":"defines the global variable as having internal linkage","id":"2837f18fdd5c9ea0","x":1836,"y":753,"width":329,"height":83},
		{"type":"text","text":"Const and constexpr global variables have internal linkage by default","id":"f89102105ac3c53a","x":1220,"y":1116,"width":378,"height":78},
		{"type":"text","text":"can be seen and used within a single translation unit, but it is not accessible from other translation units","id":"d4118e748115740d","x":1673,"y":1220,"width":365,"height":99},
		{"type":"text","text":"the variable cannot be exported to other files","id":"aa092814e69b6f06","x":1711,"y":1340,"width":290,"height":72}
	],
	"edges":[
		{"id":"4a7f6620027c1987","fromNode":"70617375b3cb3357","fromSide":"left","toNode":"d0b205b4fc7124f2","toSide":"right","toEnd":"none"},
		{"id":"fd36b980835e5f42","fromNode":"70617375b3cb3357","fromSide":"bottom","toNode":"f7fb16f628f851c8","toSide":"top"},
		{"id":"6068f2586c19de08","fromNode":"f7fb16f628f851c8","fromSide":"left","toNode":"e7ad5ef6ed6d39bb","toSide":"right"},
		{"id":"d2225c1ed42b03dc","fromNode":"e7ad5ef6ed6d39bb","fromSide":"top","toNode":"b1a5ddca5adadaa8","toSide":"bottom"},
		{"id":"e80f48e9953a1ecf","fromNode":"29061bfcddda6fa0","fromSide":"left","toNode":"70617375b3cb3357","toSide":"right"},
		{"id":"74c5bccc1bd90b72","fromNode":"29061bfcddda6fa0","fromSide":"right","toNode":"b604b4807d6d2647","toSide":"left"},
		{"id":"4aea5239a07e6255","fromNode":"b604b4807d6d2647","fromSide":"right","toNode":"ecbb171ff95db5ae","toSide":"left"},
		{"id":"15d6d230b5be41b6","fromNode":"ecbb171ff95db5ae","fromSide":"right","toNode":"25b09f46cd62d5fa","toSide":"left"},
		{"id":"be22dd1f28c543a0","fromNode":"29061bfcddda6fa0","fromSide":"bottom","toNode":"dd65a9b178cff47f","toSide":"top"},
		{"id":"94dd69ac5ae048a5","fromNode":"176d915b8d136be5","fromSide":"bottom","toNode":"b3b89b435dfbf8f4","toSide":"top"},
		{"id":"e67c04eda353fd55","fromNode":"b3b89b435dfbf8f4","fromSide":"right","toNode":"21e4716bd0b63122","toSide":"left","toEnd":"none"},
		{"id":"b26531027bade97f","fromNode":"176d915b8d136be5","fromSide":"bottom","toNode":"81e98b1dfb5f3e3f","toSide":"top"},
		{"id":"6306418b21676d69","fromNode":"81e98b1dfb5f3e3f","fromSide":"bottom","toNode":"898a077f572da772","toSide":"left","toEnd":"none"},
		{"id":"08c81e91bdb30787","fromNode":"81e98b1dfb5f3e3f","fromSide":"bottom","toNode":"cb32524d87d71a12","toSide":"left"},
		{"id":"50467c6e3e76d796","fromNode":"cb32524d87d71a12","fromSide":"bottom","toNode":"f7796acbcbe39005","toSide":"top","toEnd":"none"},
		{"id":"d53083f530521b93","fromNode":"f7796acbcbe39005","fromSide":"left","toNode":"dbceb43669edb623","toSide":"bottom"},
		{"id":"7ca493a2c4cff345","fromNode":"67c39c41650f4569","fromSide":"left","toNode":"f7fb16f628f851c8","toSide":"right"},
		{"id":"1887aa4114c25db2","fromNode":"176d915b8d136be5","fromSide":"left","toNode":"67c39c41650f4569","toSide":"right"},
		{"id":"cd9f08d2df2d1064","fromNode":"176d915b8d136be5","fromSide":"bottom","toNode":"dbceb43669edb623","toSide":"top"},
		{"id":"191f986d79ec7fb4","fromNode":"dd65a9b178cff47f","fromSide":"bottom","toNode":"663d2c6fc02f8a8b","toSide":"right"},
		{"id":"26b47cc304fd2f3d","fromNode":"dd65a9b178cff47f","fromSide":"right","toNode":"0e73c23db4264016","toSide":"left"},
		{"id":"24a5a09534650bae","fromNode":"0e73c23db4264016","fromSide":"right","toNode":"ce5e8bf4930bc19d","toSide":"left","toEnd":"none"},
		{"id":"699be86e5eb45863","fromNode":"17ca68eb2d8d1946","fromSide":"bottom","toNode":"98b03b57a28eb75f","toSide":"top","toEnd":"none"},
		{"id":"6a754d99425cc0c2","fromNode":"cd35a9c5f3219eac","fromSide":"bottom","toNode":"176d915b8d136be5","toSide":"right"},
		{"id":"8397a15417a3a057","fromNode":"cd35a9c5f3219eac","fromSide":"bottom","toNode":"ac48b05bb1f78119","toSide":"left"},
		{"id":"a69968bdd0f98b04","fromNode":"ac48b05bb1f78119","fromSide":"right","toNode":"4971136d2ffccca8","toSide":"left","toEnd":"none"},
		{"id":"903d67789a476a3d","fromNode":"ac48b05bb1f78119","fromSide":"top","toNode":"2b9cbc18e0742c76","toSide":"bottom"},
		{"id":"57416fa648c7953c","fromNode":"ac48b05bb1f78119","fromSide":"bottom","toNode":"28eb795255dd24bd","toSide":"left"},
		{"id":"f628bd97c301bd35","fromNode":"28eb795255dd24bd","fromSide":"bottom","toNode":"435c9413091618dc","toSide":"top","toEnd":"none"},
		{"id":"39ae68f784baeea9","fromNode":"ac48b05bb1f78119","fromSide":"bottom","toNode":"49f38fae7b19f0c4","toSide":"top"},
		{"id":"7b911a5bee3ca63c","fromNode":"49f38fae7b19f0c4","fromSide":"right","toNode":"0e4cc012e7b5149f","toSide":"top","toEnd":"none"},
		{"id":"54c4210e9740e7f0","fromNode":"b3b89b435dfbf8f4","fromSide":"right","toNode":"76f1152bf0aa095b","toSide":"left"},
		{"id":"c9ce88386e042b28","fromNode":"76f1152bf0aa095b","fromSide":"top","toNode":"0501f759a1cceca1","toSide":"bottom","toEnd":"none"},
		{"id":"1300cf97023fe4c6","fromNode":"ac48b05bb1f78119","fromSide":"bottom","toNode":"e3a18ec2d6279851","toSide":"top"},
		{"id":"12fd7a2efd410366","fromNode":"e3a18ec2d6279851","fromSide":"left","toNode":"76f1152bf0aa095b","toSide":"right"},
		{"id":"070e508c8cd135b5","fromNode":"176d915b8d136be5","fromSide":"bottom","toNode":"78395ba55b1d9d2a","toSide":"left","label":"no"},
		{"id":"34b6ecfda27d606b","fromNode":"78395ba55b1d9d2a","fromSide":"top","toNode":"50e778cfe962e8b3","toSide":"bottom","toEnd":"none"},
		{"id":"80c8f157b5aca28a","fromNode":"78395ba55b1d9d2a","fromSide":"bottom","toNode":"4f815059ec8271af","toSide":"left"},
		{"id":"f3995483c32a1577","fromNode":"78395ba55b1d9d2a","fromSide":"right","toNode":"3d0b48f74e89ea95","toSide":"left"},
		{"id":"c814fc9bf1721820","fromNode":"4f815059ec8271af","fromSide":"bottom","toNode":"d4118e748115740d","toSide":"top"},
		{"id":"60f7e8cdf6a45cd9","fromNode":"49f38fae7b19f0c4","fromSide":"left","toNode":"9addc4118b46ee59","toSide":"top"},
		{"id":"f1d6877029bb8c40","fromNode":"4f815059ec8271af","fromSide":"right","toNode":"f3f11de860a72abe","toSide":"bottom"},
		{"id":"39f58291616c1065","fromNode":"650908430973d24e","fromSide":"bottom","toNode":"f3f11de860a72abe","toSide":"top"},
		{"id":"5ffefe5d9dc29934","fromNode":"f3f11de860a72abe","fromSide":"left","toNode":"84f1535e70e19ba1","toSide":"right","toEnd":"none"},
		{"id":"2fdfcd4fb374ab0c","fromNode":"9addc4118b46ee59","fromSide":"bottom","toNode":"80ca1c4f57ee6345","toSide":"top"},
		{"id":"623a0028de0650f3","fromNode":"dd65a9b178cff47f","fromSide":"bottom","toNode":"cd35a9c5f3219eac","toSide":"top"},
		{"id":"f96691ffa653a276","fromNode":"b99ea786f0e73a59","fromSide":"right","toNode":"17ca68eb2d8d1946","toSide":"left"},
		{"id":"152641b4084793c7","fromNode":"cd35a9c5f3219eac","fromSide":"left","toNode":"17ca68eb2d8d1946","toSide":"right"},
		{"id":"440ec8e5d3d498a8","fromNode":"dd65a9b178cff47f","fromSide":"bottom","toNode":"9addc4118b46ee59","toSide":"top"},
		{"id":"7ee766bcce349c78","fromNode":"663d2c6fc02f8a8b","fromSide":"left","toNode":"176d915b8d136be5","toSide":"top"},
		{"id":"562fe4780432405f","fromNode":"4f815059ec8271af","fromSide":"right","toNode":"80ca1c4f57ee6345","toSide":"bottom"},
		{"id":"e35a7e02891abb9b","fromNode":"ac48b05bb1f78119","fromSide":"bottom","toNode":"2c1b7c70cd952e45","toSide":"left"},
		{"id":"73d47a92023c6b0c","fromNode":"3d0b48f74e89ea95","fromSide":"top","toNode":"d9cda2962e6cf4ba","toSide":"bottom"},
		{"id":"0e094f7a88edff5e","fromNode":"3d0b48f74e89ea95","fromSide":"bottom","toNode":"12a49b4e3e02f0e3","toSide":"top","toEnd":"none"},
		{"id":"817180186c71c7f5","fromNode":"2c1b7c70cd952e45","fromSide":"bottom","toNode":"d9cda2962e6cf4ba","toSide":"top"},
		{"id":"9b7741a27d0a9cc6","fromNode":"60a8e38af7a1eb14","fromSide":"bottom","toNode":"d9cda2962e6cf4ba","toSide":"right"},
		{"id":"42847d688451c6e6","fromNode":"f1bcd9ad319a5d67","fromSide":"left","toNode":"cd35a9c5f3219eac","toSide":"right"},
		{"id":"b61b25bd1c85fb84","fromNode":"cd35a9c5f3219eac","fromSide":"bottom","toNode":"1171bf25b8889a16","toSide":"top"},
		{"id":"53c1d863de109f01","fromNode":"1171bf25b8889a16","fromSide":"bottom","toNode":"2d511639347080cf","toSide":"right","toEnd":"none"},
		{"id":"cf473cd3dbcbac96","fromNode":"32eb5dcdda358fb6","fromSide":"right","toNode":"176d915b8d136be5","toSide":"top"},
		{"id":"b8a1d34ce60317d9","fromNode":"176d915b8d136be5","fromSide":"bottom","toNode":"83218b96336cd0d2","toSide":"top"},
		{"id":"00ece5f8c73ed2bd","fromNode":"83218b96336cd0d2","fromSide":"bottom","toNode":"52c7ab3f3e5a14a8","toSide":"top","toEnd":"none"},
		{"id":"4deaf80c3eb4cbe0","fromNode":"9addc4118b46ee59","fromSide":"bottom","toNode":"2837f18fdd5c9ea0","toSide":"top"},
		{"id":"83475befa104f79d","fromNode":"2837f18fdd5c9ea0","fromSide":"bottom","toNode":"650908430973d24e","toSide":"top"},
		{"id":"b9c58b2c9bdc3b80","fromNode":"d4118e748115740d","fromSide":"bottom","toNode":"aa092814e69b6f06","toSide":"top"},
		{"id":"f1964b82a208cb0a","fromNode":"6dcecc668cece7a4","fromSide":"right","toNode":"2c1b7c70cd952e45","toSide":"left"},
		{"id":"37cecfa5425c8257","fromNode":"6dcecc668cece7a4","fromSide":"left","toNode":"9addc4118b46ee59","toSide":"right"},
		{"id":"8b70c92cb06d5889","fromNode":"6dcecc668cece7a4","fromSide":"bottom","toNode":"33578d497acf6415","toSide":"top","toEnd":"none"},
		{"id":"cd6da16952f8ce26","fromNode":"29061bfcddda6fa0","fromSide":"right","toNode":"060e6407960302f2","toSide":"left"},
		{"id":"34b3fced15b0e3b9","fromNode":"060e6407960302f2","fromSide":"right","toNode":"f61c28c875aea55a","toSide":"left","toEnd":"none"},
		{"id":"fa018419ebbf3843","fromNode":"f61c28c875aea55a","fromSide":"top","toNode":"ecbb171ff95db5ae","toSide":"bottom"},
		{"id":"caa58dd752bba42f","fromNode":"29061bfcddda6fa0","fromSide":"bottom","toNode":"07a798d1eb84855a","toSide":"top"},
		{"id":"526e8638ee90689d","fromNode":"07a798d1eb84855a","fromSide":"right","toNode":"ce80ec49967a7e07","toSide":"left","toEnd":"none"},
		{"id":"c95dc7a4cd2ba548","fromNode":"ce80ec49967a7e07","fromSide":"right","toNode":"6ce1d51d1b16a95c","toSide":"left"},
		{"id":"f2e6a7413306d92b","fromNode":"ac6f127ec4dd38c2","fromSide":"top","toNode":"060e6407960302f2","toSide":"right"},
		{"id":"e3271db099eb66d6","fromNode":"ac6f127ec4dd38c2","fromSide":"right","toNode":"2d62c05c46a76dc7","toSide":"left","toEnd":"none"},
		{"id":"d19a9fbea044afd8","fromNode":"07a798d1eb84855a","fromSide":"right","toNode":"ac6f127ec4dd38c2","toSide":"bottom"},
		{"id":"887e38cb660929e0","fromNode":"b1fb31e60f0a4925","fromSide":"top","toNode":"2cade2018b6f5791","toSide":"bottom"},
		{"id":"2cca8f606b22a68c","fromNode":"07a798d1eb84855a","fromSide":"left","toNode":"2cade2018b6f5791","toSide":"bottom"},
		{"id":"35bd3f812c80fc27","fromNode":"2cade2018b6f5791","fromSide":"top","toNode":"060e6407960302f2","toSide":"left"},
		{"id":"04eb8bfaf991919b","fromNode":"2d62c05c46a76dc7","fromSide":"right","toNode":"d237ed10a15105c9","toSide":"left"},
		{"id":"77800453b0cc72bb","fromNode":"2cade2018b6f5791","fromSide":"left","toNode":"85d1fc4140d5a40c","toSide":"right"},
		{"id":"0697652d8308a773","fromNode":"db85eef62cda1b22","fromSide":"left","toNode":"13e60b87beb2aabd","toSide":"right","toEnd":"none"},
		{"id":"35a1090ac9457528","fromNode":"663d2c6fc02f8a8b","fromSide":"left","toNode":"59426e6ec9e51718","toSide":"right"},
		{"id":"1c09793d32a75539","fromNode":"59426e6ec9e51718","fromSide":"top","toNode":"db85eef62cda1b22","toSide":"bottom"},
		{"id":"8eab443a9fafad9c","fromNode":"663d2c6fc02f8a8b","fromSide":"left","toNode":"995001190a339924","toSide":"right"},
		{"id":"383993a2dc441b45","fromNode":"995001190a339924","fromSide":"left","toNode":"eacab808b0a81a02","toSide":"right","toEnd":"none"},
		{"id":"5366b4db13a25dae","fromNode":"29061bfcddda6fa0","fromSide":"top","toNode":"84172049928f5ff0","toSide":"left"},
		{"id":"99e35c1b193af11e","fromNode":"84172049928f5ff0","fromSide":"right","toNode":"0f823abc43d1e840","toSide":"left","toEnd":"none"},
		{"id":"f68b777f3c322488","fromNode":"ecbb171ff95db5ae","fromSide":"top","toNode":"b9bde61e2c3d9b69","toSide":"left"},
		{"id":"ec858356dfa982a4","fromNode":"29061bfcddda6fa0","fromSide":"top","toNode":"88425d3f58c610d1","toSide":"left"},
		{"id":"772064f8a02194fc","fromNode":"88425d3f58c610d1","fromSide":"right","toNode":"182d7bc92dc4aaa0","toSide":"left"},
		{"id":"f31342b1581da93a","fromNode":"f89102105ac3c53a","fromSide":"right","toNode":"4f815059ec8271af","toSide":"left"}
	]
}