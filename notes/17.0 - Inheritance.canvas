{
	"nodes":[
		{"type":"text","text":"inheritance","id":"762530a18a1fb987","x":-6,"y":-55,"width":146,"height":55,"color":"3"},
		{"type":"text","text":"models an “is-a” relationship between two objects.","id":"2c2eddacd999ace9","x":165,"y":-55,"width":435,"height":55},
		{"type":"text","text":"```cpp\nclass Derived: public Base\n{\npublic:\n    double m_cost {};\n    Derived(double cost=0.0, int id=0) : Base{ id }, m_cost{ cost }{} // Call Base(int) constructor with value id!\n    double getCost() const { return m_cost; }\n};\n```","id":"4e356eca79475e76","x":941,"y":165,"width":600,"height":240},
		{"type":"text","text":"```cpp\n// BaseballPlayer publicly inheriting Person\nclass BaseballPlayer : public Person // BaseballPlayer is a derived class\n{\npublic:\n    double m_battingAverage{};\n    int m_homeRuns{};\n    BaseballPlayer(double battingAverage = 0.0, int homeRuns = 0)\n       : m_battingAverage{battingAverage}, m_homeRuns{homeRuns}{}\n};\n```","id":"08e1b9d33352c8d2","x":240,"y":160,"width":674,"height":250},
		{"id":"ee076c7603ef9032","x":-33,"y":700,"width":200,"height":58,"color":"5","type":"text","text":"Private inheritance"},
		{"id":"5fae02dc91c68d9b","x":-142,"y":800,"width":418,"height":100,"type":"text","text":"- inherited public members become private\n- inherited protected members become private.\n- Inherited private members stay inaccessible."},
		{"id":"09694c17db9e2d1b","x":-475,"y":700,"width":209,"height":58,"color":"5","type":"text","text":"Public inheritance"},
		{"id":"6b78fed4279a105e","x":-580,"y":800,"width":420,"height":100,"type":"text","text":"- inherited public members stay public\n- inherited protected members stay protected.\n- Inherited private members stay inaccessible."},
		{"id":"cdfc8bae5bea0260","x":411,"y":700,"width":213,"height":58,"color":"5","type":"text","text":"Protected inheritance"},
		{"id":"d79ad8dcafa518f7","x":293,"y":800,"width":450,"height":100,"type":"text","text":"- inherited public members become protected\n- inherited protected members become protected\n- Inherited private members stay inaccessible."},
		{"id":"9c8719baa34cbfa0","x":-740,"y":502,"width":623,"height":172,"type":"text","text":"```cpp\n// We can call the Base::getValue() function directly\n\tstd::cout << derived.Base::getValue();\n\n\t// Or we can upcast Derived to a Base reference and getValue() will resolve to Base::getValue()\n\tstd::cout << static_cast<Base&>(derived).getValue();\n```"},
		{"id":"0fcb164501b6e7ed","x":-715,"y":-55,"width":210,"height":55,"color":"6","type":"text","text":"Mulltiple inheritance"},
		{"id":"536f95de784424b2","x":-1075,"y":-63,"width":335,"height":71,"type":"text","text":"enables a derived class to inherit members from more than one parent."},
		{"type":"text","text":"In an inheritance (is-a) relationship, the class being inherited from is called the **parent class** ( **base class** or **superclass**) and the class doing the inheriting is called the **child class** ( **derived class** or **subclass**.)","id":"beb8ad9f12055177","x":190,"y":29,"width":578,"height":105},
		{"type":"text","text":"C++ constructs derived classes in phases, starting with the most-base class (at the top of the inheritance tree) and finishing with the most-child class (at the bottom of the inheritance tree).","id":"0138e398ef66b521","x":807,"y":-46,"width":434,"height":105},
		{"id":"da1944d80810f9e6","x":-370,"y":394,"width":394,"height":78,"type":"text","text":"```cpp\nint getValue() const = delete; // mark this function as inaccessible\n```"},
		{"id":"8e92c03531ef979b","x":-298,"y":52,"width":250,"height":60,"type":"text","text":"**Changing an inherited member’s access level**"},
		{"id":"1a19395db397fbff","x":-370,"y":143,"width":394,"height":68,"type":"text","text":"This is done by using a _using declaration_ to identify the (scoped) base class member"},
		{"id":"79e17274557714bb","x":-370,"y":235,"width":394,"height":135,"type":"text","text":"```cpp\npublic:\nusing Base::protectedFoo;\n// protectedFoo from Base becomes public in Derived class\n```"},
		{"type":"text","text":"kinds of inheritance","id":"06f5d58690620adb","x":-44,"y":487,"width":222,"height":56,"color":"6"},
		{"type":"text","text":"**protected** access specifier","id":"9c024b33f6739af2","x":354,"y":485,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"allows the class the member belongs to, friends, and derived classes to access the member","id":"606bc73bcfe998f1","x":651,"y":475,"width":430,"height":81},
		{"type":"text","text":"Favor private members over protected members.","id":"839d20d48e44f016","x":616,"y":593,"width":250,"height":60,"color":"4"},
		{"id":"af02d8ebd6979ea0","x":-1350,"y":35,"width":610,"height":99,"type":"text","text":"```cpp\n// Teacher publicly inherits Person and Employee\nclass Teacher : public Person, public Employee {};\n```"},
		{"id":"1a180d0718faaa5f","x":-970,"y":177,"width":125,"height":50,"color":"6","type":"text","text":"mixin"},
		{"id":"7dca8f24fb1188eb","x":-1440,"y":150,"width":440,"height":105,"type":"text","text":"is a small class that can be inherited from in order to add properties to a class. Is intended to be mixed into other classes, not instantiated on its own."}
	],
	"edges":[
		{"id":"d8349dfac0387463","fromNode":"762530a18a1fb987","fromSide":"right","toNode":"2c2eddacd999ace9","toSide":"left","toEnd":"none","color":"6"},
		{"id":"fe327a5556c827d0","fromNode":"762530a18a1fb987","fromSide":"bottom","toNode":"beb8ad9f12055177","toSide":"left","color":"6"},
		{"id":"04201464ae28ad33","fromNode":"762530a18a1fb987","fromSide":"bottom","toNode":"08e1b9d33352c8d2","toSide":"left","color":"6"},
		{"id":"d6a9c376df36a2e6","fromNode":"2c2eddacd999ace9","fromSide":"right","toNode":"0138e398ef66b521","toSide":"left","color":"6"},
		{"id":"1bd3fd891ccf3117","fromNode":"08e1b9d33352c8d2","fromSide":"right","toNode":"4e356eca79475e76","toSide":"left","color":"6"},
		{"id":"b94c664eb4d47fe8","fromNode":"9c024b33f6739af2","fromSide":"right","toNode":"606bc73bcfe998f1","toSide":"left","toEnd":"none","color":"6"},
		{"id":"e954957b8594836b","fromNode":"839d20d48e44f016","fromSide":"left","toNode":"9c024b33f6739af2","toSide":"bottom","color":"4"},
		{"id":"4725da1cdd2df5fc","fromNode":"762530a18a1fb987","fromSide":"bottom","toNode":"06f5d58690620adb","toSide":"top","color":"6"},
		{"id":"a76df8602d3935ae","fromNode":"06f5d58690620adb","fromSide":"right","toNode":"9c024b33f6739af2","toSide":"left","fromEnd":"arrow","color":"6"},
		{"id":"0644f3b67b9d9f91","fromNode":"06f5d58690620adb","fromSide":"bottom","toNode":"09694c17db9e2d1b","toSide":"right","color":"1"},
		{"id":"b7c3548261530af0","fromNode":"09694c17db9e2d1b","fromSide":"bottom","toNode":"6b78fed4279a105e","toSide":"top","toEnd":"none","color":"6"},
		{"id":"1a8cf044d14b2dce","fromNode":"06f5d58690620adb","fromSide":"bottom","toNode":"ee076c7603ef9032","toSide":"top","color":"2"},
		{"id":"f2375f3a28e8afc0","fromNode":"ee076c7603ef9032","fromSide":"bottom","toNode":"5fae02dc91c68d9b","toSide":"top","toEnd":"none","color":"6"},
		{"id":"b83ddfdaba676fb4","fromNode":"06f5d58690620adb","fromSide":"bottom","toNode":"cdfc8bae5bea0260","toSide":"left","color":"5"},
		{"id":"824977da97aaad12","fromNode":"cdfc8bae5bea0260","fromSide":"bottom","toNode":"d79ad8dcafa518f7","toSide":"top","toEnd":"none","color":"6"},
		{"id":"e43dcaeb2ed587c8","fromNode":"762530a18a1fb987","fromSide":"bottom","toNode":"8e92c03531ef979b","toSide":"right","color":"6"},
		{"id":"fbb9965bd2c55486","fromNode":"8e92c03531ef979b","fromSide":"bottom","toNode":"1a19395db397fbff","toSide":"top","toEnd":"none","color":"6"},
		{"id":"7eedc85646448055","fromNode":"1a19395db397fbff","fromSide":"bottom","toNode":"79e17274557714bb","toSide":"top","color":"6"},
		{"id":"40644851100dea3b","fromNode":"79e17274557714bb","fromSide":"bottom","toNode":"da1944d80810f9e6","toSide":"top","toEnd":"none","color":"6"},
		{"id":"d526d969195935b4","fromNode":"da1944d80810f9e6","fromSide":"left","toNode":"9c8719baa34cbfa0","toSide":"top","color":"6"},
		{"id":"f2efa6aef7c0f3de","fromNode":"762530a18a1fb987","fromSide":"left","toNode":"0fcb164501b6e7ed","toSide":"right","color":"5"},
		{"id":"af46b573b04c8796","fromNode":"0fcb164501b6e7ed","fromSide":"left","toNode":"536f95de784424b2","toSide":"right","toEnd":"none","color":"6"},
		{"id":"1866daf3120d874f","fromNode":"0fcb164501b6e7ed","fromSide":"bottom","toNode":"af02d8ebd6979ea0","toSide":"right","color":"6"},
		{"id":"bc21b4056835eb04","fromNode":"0fcb164501b6e7ed","fromSide":"bottom","toNode":"1a180d0718faaa5f","toSide":"right","color":"6"},
		{"id":"5e59299cef104ef4","fromNode":"1a180d0718faaa5f","fromSide":"left","toNode":"7dca8f24fb1188eb","toSide":"right","toEnd":"none","color":"6"}
	]
}