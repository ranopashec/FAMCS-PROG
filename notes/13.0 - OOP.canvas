{
	"nodes":[
		{"type":"text","text":"class","id":"677cc9d56365aa7b","x":-168,"y":-63,"width":108,"height":50,"color":"6"},
		{"type":"text","text":"**member functions**","id":"e7ce041416ba9696","x":-40,"y":125,"width":197,"height":55,"color":"6"},
		{"type":"text","text":"are members of a struct or class that can be accessed directly by anyone, including from code that exists outside the struct or class.","id":"f59cd45188cc0641","x":219,"y":320,"width":541,"height":64},
		{"type":"text","text":"a member of a class that can only be accessed by other members of the class.","id":"b09318e9fa994cfc","x":219,"y":430,"width":377,"height":85},
		{"type":"text","text":"**access function**","id":"ece604aadabd843d","x":232,"y":576,"width":197,"height":50,"color":"6"},
		{"type":"text","text":" is a short public function whose job is to retrieve or change the value of a private member variable. ","id":"be5692d8d65a281c","x":490,"y":560,"width":413,"height":82},
		{"type":"text","text":"gatters","id":"cb4843f08764ec8c","x":-40,"y":820,"width":109,"height":50,"color":"6"},
		{"type":"text","text":"also sometimes called **accessors**) are functions that return the value of a private member variable","id":"33274b6d31002528","x":123,"y":808,"width":416,"height":74},
		{"type":"text","text":"**Setters**","id":"78578edfd1b0854e","x":596,"y":820,"width":124,"height":50,"color":"6"},
		{"type":"text","text":"aggregate initialization","id":"30210672e8235d75","x":980,"y":320,"width":250,"height":64,"color":"6"},
		{"type":"text","text":"can be used, when all members of a class (or struct) are public, to initialize the class (or struct) directly using list-initialization","id":"67dc7a56b8377782","x":1299,"y":320,"width":521,"height":64},
		{"type":"text","text":"(methods). Functions defined inside of class","id":"415fc2189e47b868","x":533,"y":123,"width":250,"height":60},
		{"type":"text","text":"is a special kind of class member function that is automatically called when an object of that class is created.","id":"93926e5f97116af1","x":1299,"y":434,"width":521,"height":77},
		{"type":"text","text":"1. Constructors must have the same name as the class (with the same capitalization)\n2. Constructors have no return type (not even void)","id":"a2ab887f7226b286","x":1216,"y":540,"width":688,"height":79,"color":"4"},
		{"type":"text","text":"**default constructor**","id":"38df4ea47a7257bd","x":1259,"y":730,"width":201,"height":60,"color":"6"},
		{"type":"text","text":"A constructor that takes no parameters (or has parameters that all have default values)","id":"e65931476800a35d","x":1480,"y":730,"width":384,"height":60},
		{"type":"text","text":"```cpp\nclass Fraction\n{\nprivate:\n    int m_numerator {};\n    int m_denominator {};\n\npublic:\n    Fraction() // default constructor\n    {\n        m_numerator = 0;\n        m_denominator = 1;\n    }\n};\n\nint main ()\n{\nFraction fract{} // calls Fraction() default constructor\n}\n```","id":"d1417e6e263a5872","x":1960,"y":540,"width":810,"height":440},
		{"type":"text","text":"**implicit constructor**","id":"7245388ffc98096c","x":1259,"y":880,"width":201,"height":60,"color":"6"},
		{"type":"text","text":"automatically generated default constructor","id":"e0d62e8945df2ffb","x":1480,"y":880,"width":384,"height":60},
		{"type":"text","text":"```cpp\n    // Tell the compiler to create a default constructor, even if\n    // there are other user-provided constructors.\n    Date() = default;\n```","id":"f082d2d65be1f50d","x":1760,"y":1000,"width":666,"height":101},
		{"type":"text","text":"**member initializer list**","id":"73f29b98f29f8530","x":1249,"y":1174,"width":221,"height":50,"color":"6"},
		{"type":"text","text":"a method for initializing class member variables (rather than assigning values to them after they are created)","id":"b844117f47b2343b","x":1712,"y":1160,"width":496,"height":80},
		{"type":"text","text":"```cpp\nclass Something { int m_value1 {}; double m_value2 {}; char m_value3 {};\npublic:\nSomething() : m_value1{ 1 }, m_value2{ 2.2 }, m_value3{ 'c' } // Initialize our member variables\n{ }\nSomething(int value1, double value2, char value3='c') : m_value1{ value1 }, m_value2{ value2 }, m_value3{ value3 } // directly initialize our member variables\n{ }\n```\n","id":"635f81538cf6366e","x":2426,"y":1100,"width":1067,"height":200},
		{"type":"text","text":"Use member initializer lists to initialize your class member variables instead of assignment.","id":"73b66444416690ee","x":2730,"y":1000,"width":459,"height":57,"color":"4"},
		{"type":"text","text":"**delegating constructors**","id":"fc87069edc9dc1aa","x":832,"y":730,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"(or **constructor chaining**). When constructor call other constructors from the same class","id":"22d3d4ab0f5b41c6","x":754,"y":820,"width":407,"height":88},
		{"type":"text","text":"```cpp\n    Foo()\n    {\n        // code to do A\n    }\n\n    Foo(int value): Foo{} \n// use Foo() default constructor to do A\n    {\n        // code to do B\n    }\n```","id":"3ae6bd38dbb76bf3","x":793,"y":940,"width":329,"height":303},
		{"type":"text","text":"**constructor**","id":"c91fd75c6aaad0a3","x":1034,"y":448,"width":142,"height":50,"color":"5"},
		{"type":"text","text":"```cpp\nclass Foo\n{\npublic:\nint m_x {};\nint m_y {}; \n};\n\nint main()\n{\n    Foo foo { 6, 7 }; // list-initialization\n}\n```","id":"91f525383508c006","x":1960,"y":201,"width":600,"height":302},
		{"type":"text","text":"**`this `pointer**","id":"ca35dca430028cf1","x":1014,"y":126,"width":162,"height":54,"color":"6"},
		{"type":"text","text":"is a hidden const pointer that holds the address of the object the member function was called on","id":"4932c80489dd7d49","x":1216,"y":109,"width":392,"height":89},
		{"type":"text","text":"```cpp\nvoid setID(int id) { m_id = id; }\n```","id":"a8fd6df37b9a9521","x":1663,"y":128,"width":402,"height":50},
		{"type":"text","text":"```cpp\nvoid setID(Simple* const this, int id) { this->m_id = id; }\n```","id":"0ef8ee9c95d2262e","x":1200,"y":220,"width":589,"height":74},
		{"type":"text","text":"```cpp\nclass Something\n{\nprivate:\n    int data;\n\npublic:\n    Something(int data)\n    {\n        this->data = data; // this->data is the member, data is the local parameter\n    }\n};\n```","id":"71d554cc7cf0e377","x":2600,"y":-7,"width":460,"height":320},
		{"type":"text","text":"```cpp\n#include <iostream>\n\nclass Calc\n{\nprivate:\n    int m_value { 0 };\n\npublic:\n    Calc& add(int value) { m_value += value; return *this; }\n    Calc& sub(int value) { m_value -= value; return *this; }\n    Calc& mult(int value) { m_value *= value; return *this; }\n\n    int getValue() { return m_value; }\n};\n\n\nint main()\n{\n    Calc calc{};\n    calc.add(5).sub(3).mult(4);\n\n    std::cout << calc.getValue() << '\\n';\n    return 0;\n}\n```","id":"72edc3ea6a6bbf58","x":3100,"y":-141,"width":660,"height":588},
		{"type":"text","text":"classes can have member types or nested types (including type aliases).","id":"9727a6c7f2d737cf","x":183,"y":-350,"width":393,"height":66},
		{"type":"text","text":"structs, that contains member functions","id":"8edd467207479b96","x":255,"y":-240,"width":250,"height":60},
		{"type":"text","text":"`class`-type members get initialized even if we don’t explicitly initialize them.","id":"6fdbae0cf8239c0b","x":184,"y":-435,"width":393,"height":66},
		{"type":"text","text":"```cpp\nclass IntArray\n{\nprivate:\n\tint* m_array{};\npublic:\n\t~IntArray() // destructor\n\t{\n\t\tdelete[] m_array; // Dynamically delete the array we allocated earlier\n\t}\n```","id":"dc626fb3bf337df3","x":1974,"y":-229,"width":600,"height":287},
		{"type":"text","text":"**destructor**","id":"e534e10d46e8a881","x":1048,"y":-111,"width":142,"height":50,"color":"5"},
		{"type":"text","text":"class member function that is executed when an object of that class is destroyed. Whereas constructors are designed to initialize a class, destructors are designed to help clean up.","id":"aa710e7e4394ae16","x":1313,"y":-131,"width":521,"height":90},
		{"type":"text","text":"1. The destructor must have the same name as the class, preceded by a tilde (~).\n2. The destructor can not take arguments.\n3. The destructor has no return type.","id":"c99af945f5c22c44","x":1230,"y":-7,"width":688,"height":109,"color":"4"},
		{"type":"text","text":"[Because static member variables are not part of the individual class objects you must explicitly define the static member outside of the class, in the global scope.](https://en.cppreference.com/w/cpp/language/static)","id":"7455ad096ca14a48","x":1473,"y":-378,"width":469,"height":99},
		{"type":"text","text":"- have no *this pointer\n- can directly access other static members (variables or functions), but not non-static members","id":"0bfa4abf41041855","x":1473,"y":-251,"width":469,"height":95},
		{"type":"text","text":"`static` keyword","id":"f40e91e02fac268c","x":781,"y":-279,"width":177,"height":50,"color":"6"},
		{"type":"text","text":"Static member functions","id":"0976b082faa23825","x":1192,"y":-229,"width":249,"height":50,"color":"6"},
		{"type":"text","text":"**Static member variables**","id":"178400f47c398744","x":1192,"y":-355,"width":249,"height":53,"color":"6"},
		{"type":"text","text":"**const member function**","id":"df6db6b2f7375bef","x":661,"y":-525,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"```cpp\n    int getValue() const { return m_value; } // note addition of const keyword after parameter list, but before function body\n```","id":"bcdd5d9602f524d0","x":1000,"y":-566,"width":425,"height":140},
		{"type":"text","text":"making any member function that does not modify the state of the class object const!","id":"38979831b2190962","x":1473,"y":-527,"width":367,"height":62,"color":"4"},
		{"type":"text","text":"`const` keyword","id":"a19bceca609367dd","x":245,"y":-521,"width":196,"height":50,"color":"6"},
		{"type":"text","text":"**Access specifiers**","id":"807dd671043bfae3","x":-215,"y":241,"width":202,"height":55,"color":"6"},
		{"type":"text","text":"**Public members**","id":"ff73f7b2be3c2dba","x":-13,"y":328,"width":200,"height":50,"color":"6"},
		{"type":"text","text":"Private members","id":"c5f6dd690883fac1","x":-13,"y":448,"width":200,"height":50,"color":"6"},
		{"type":"text","text":"are members of a class that can not be accessed by the public. Can only be accessed by other members of the class.","id":"beb45fbac1819b6d","x":-315,"y":1112,"width":402,"height":82},
		{"type":"text","text":"specifier keywords","id":"f3cc5eea6366e3a3","x":-215,"y":738,"width":205,"height":56,"color":"6"},
		{"type":"text","text":"`private` keyword","id":"f241a47921ce8003","x":-215,"y":998,"width":202,"height":66,"color":"6"},
		{"type":"text","text":"`protected` keyword","id":"7ba4a5d924325392","x":23,"y":998,"width":204,"height":66,"color":"6"},
		{"type":"text","text":"(also sometimes called **mutators**) are functions that set the value of a private member variable.","id":"436360e2958e10d3","x":157,"y":908,"width":416,"height":79},
		{"type":"text","text":"The group of public members of a class","id":"fa14cbab07d50b7d","x":-688,"y":1024,"width":228,"height":57},
		{"type":"text","text":"The code outside of a struct or class","id":"6e46ae5d8fb8adc6","x":-670,"y":906,"width":210,"height":64},
		{"type":"text","text":"`public` keyword","id":"f52028802645c50c","x":-430,"y":908,"width":190,"height":60,"color":"6"},
		{"type":"text","text":"**public interface**","id":"fb8328b632c52ecb","x":-424,"y":1024,"width":178,"height":53,"color":"6"},
		{"type":"text","text":"**the implicit object**","id":"28119e979f671ec4","x":138,"y":229,"width":196,"height":51,"color":"6"},
		{"type":"text","text":"the associated object that is essentially implicitly passed to the member function","id":"0107860b80fc3a18","x":377,"y":220,"width":400,"height":69},
		{"type":"text","text":"determine who has access to the members that follow the specifier.","id":"dc5a0d6dca6f47ef","x":-300,"y":542,"width":290,"height":68},
		{"type":"text","text":"```cpp\nclass DateClass\n{\npublic: // note use of public keyword here, and the colon\n    int m_month {}; // public, can be accessed by anyone\n    int m_day {}; // public, can be accessed by anyone\n    int m_year {}; // public, can be accessed by anyone\n};\n```","id":"06de45743f7be5af","x":-1342,"y":833,"width":623,"height":211},
		{"type":"text","text":"```cpp\nclass Value{\n    int m_value{};\npublic:\n    Value(int value) : m_value{ value } {}\n    friend bool isEqual(const Value& value1, const Value& value2);\n};\nbool isEqual(const Value& value1, const Value& value2)\n{\n    return (value1.m_value == value2.m_value);\n}\n```","id":"83b6e452a9f0132b","x":-1297,"y":537,"width":701,"height":283},
		{"type":"text","text":"is a function that can access the private members of a class as though it was a member of that class. May be either a normal function, or a member function of another class.","id":"a5cb85b2e17d6968","x":-766,"y":417,"width":504,"height":99},
		{"type":"text","text":"**friend function**","id":"7a7af679168ec611","x":-596,"y":344,"width":164,"height":50,"color":"6"},
		{"type":"text","text":"**Friend classes**","id":"611ce9b3761cd609","x":-1126,"y":344,"width":199,"height":50,"color":"6"},
		{"type":"text","text":"gives all of the members of the friend class access to the private members of the other class","id":"afa155d4b2b9450e","x":-1246,"y":418,"width":440,"height":98},
		{"type":"text","text":"object-oriented programming","id":"242102dd13ddb9db","x":-1430,"y":-614,"width":266,"height":58,"color":"3"},
		{"type":"text","text":"the packaging of data and functions that work on that data together.","id":"7f7fa044d2b361d9","x":-1140,"y":-626,"width":327,"height":82},
		{"type":"text","text":"(also called **information hiding**) is the process of keeping the details about how an object is implemented hidden away from users of the object","id":"d9d2fec1427e14c2","x":-2120,"y":-640,"width":446,"height":110},
		{"type":"text","text":"**Encapsulation**","id":"6983111c207095fb","x":-1659,"y":-611,"width":176,"height":52,"color":"6"},
		{"type":"text","text":"`friend` keyword","id":"2f9cb209d3941818","x":-608,"y":255,"width":189,"height":50,"color":"6"},
		{"type":"text","text":"**Anonymous class objects**","id":"a39a460f5166cd25","x":-1601,"y":-60,"width":250,"height":60,"color":"6"},
		{"type":"text","text":"anonymous object","id":"945da095d6803289","x":-1021,"y":-243,"width":215,"height":50,"color":"6"},
		{"type":"text","text":"a value that has no name","id":"6025d70d56bf704c","x":-867,"y":-123,"width":250,"height":60},
		{"type":"text","text":"```cpp\nconst Date date1; // initialize using default constructor\nconst Date date2(2020, 10, 16); // initialize using parameterized constructor\nconst Date date3 { 2020, 10, 16 }; // initialize using parameterized constructor (C++11)\n```","id":"4f80f4dc3978ba11","x":82,"y":-743,"width":522,"height":178},
		{"type":"text","text":"a member function that guarantees it will not modify the object or call any non-const member functions","id":"bd759795a65a98b1","x":573,"y":-654,"width":427,"height":88},
		{"type":"text","text":"```cpp\nCents cents{ 5 }; // normal variable\nCents{ 7 }; // anonymous object\n```","id":"9d76285cadf93f13","x":-2020,"y":-73,"width":392,"height":87},
		{"type":"text","text":"class prototype","id":"ec94f51abe99b927","x":-544,"y":-2,"width":204,"height":53,"color":"6"},
		{"type":"text","text":"```cpp\nclass ClassName;\n```","id":"69c7de07ecf1a190","x":-793,"y":-13,"width":232,"height":75},
		{"type":"text","text":"- For classes used in only one file that aren’t generally reusable, define them directly in the single .cpp file they’re used in.\n- For classes used in multiple files, or intended for general reuse, define them in a .h file that has the same name as the class.\n- Trivial member functions (trivial constructors or destructors, access functions, etc…) can be defined inside the class.\n- Non-trivial member functions should be defined in a .cpp file that has the same name as the class.","id":"f340a4b5ee56d2cf","x":-1380,"y":25,"width":549,"height":272,"color":"4"},
		{"type":"text","text":"types can be defined (nested) inside of a class","id":"2346b783ae6fa345","x":-157,"y":23,"width":432,"height":56},
		{"type":"text","text":"```cpp\n#include <chrono> // for std::chrono functions\nclass Timer\n{\nprivate:\n\tusing Clock = std::chrono::steady_clock;\n\tusing Second = std::chrono::duration<double, std::ratio<1> >;\n\n\tstd::chrono::time_point<Clock> m_beg { Clock::now() };\npublic:\n\tvoid reset()\n\t{m_beg = Clock::now(); }\n\t\n\tdouble elapsed() const\n\t{ return std::chrono::duration_cast<Second>(Clock::now() - m_beg).count(); }\n};\n```","id":"633b11e4d31e8c0e","x":633,"y":-1080,"width":840,"height":400},
		{"type":"text","text":"encapsulate all the timing functionality","id":"e50e368ed7395484","x":82,"y":-910,"width":207,"height":60}
	],
	"edges":[
		{"id":"a340512a3b7f6212","fromNode":"2346b783ae6fa345","fromSide":"bottom","toNode":"e7ce041416ba9696","toSide":"top","color":"3"},
		{"id":"8019c8a880429499","fromNode":"e7ce041416ba9696","fromSide":"right","toNode":"415fc2189e47b868","toSide":"left","toEnd":"none"},
		{"id":"19de2e7463a2d64a","fromNode":"e7ce041416ba9696","fromSide":"bottom","toNode":"28119e979f671ec4","toSide":"left"},
		{"id":"19f460aee96cf6bc","fromNode":"28119e979f671ec4","fromSide":"right","toNode":"0107860b80fc3a18","toSide":"left","toEnd":"none"},
		{"id":"2ff43c59ccd5543d","fromNode":"8edd467207479b96","fromSide":"top","toNode":"9727a6c7f2d737cf","toSide":"bottom"},
		{"id":"2dcb582a7af9ea0d","fromNode":"807dd671043bfae3","fromSide":"bottom","toNode":"ff73f7b2be3c2dba","toSide":"left","color":"5"},
		{"id":"c0437ba882341458","fromNode":"ff73f7b2be3c2dba","fromSide":"right","toNode":"f59cd45188cc0641","toSide":"left","toEnd":"none"},
		{"id":"d3748893daffa374","fromNode":"6e46ae5d8fb8adc6","fromSide":"left","toNode":"06de45743f7be5af","toSide":"right"},
		{"id":"9068eea2281d8d53","fromNode":"f52028802645c50c","fromSide":"left","toNode":"6e46ae5d8fb8adc6","toSide":"right"},
		{"id":"bed60c030416c987","fromNode":"677cc9d56365aa7b","fromSide":"bottom","toNode":"807dd671043bfae3","toSide":"top"},
		{"id":"d20bffdec5de2d29","fromNode":"807dd671043bfae3","fromSide":"bottom","toNode":"dc5a0d6dca6f47ef","toSide":"top","toEnd":"none"},
		{"id":"fd6a3175e5c3b35c","fromNode":"807dd671043bfae3","fromSide":"bottom","toNode":"f3cc5eea6366e3a3","toSide":"top"},
		{"id":"17f7db60810d5fce","fromNode":"f3cc5eea6366e3a3","fromSide":"bottom","toNode":"f52028802645c50c","toSide":"right","color":"2"},
		{"id":"36ce889b227edd3a","fromNode":"f3cc5eea6366e3a3","fromSide":"bottom","toNode":"f241a47921ce8003","toSide":"top","color":"3"},
		{"id":"311f89b44a5149c7","fromNode":"f3cc5eea6366e3a3","fromSide":"bottom","toNode":"7ba4a5d924325392","toSide":"top","color":"4"},
		{"id":"52e4aedba1ed1c9f","fromNode":"f241a47921ce8003","fromSide":"bottom","toNode":"beb45fbac1819b6d","toSide":"top"},
		{"id":"8eec4dd935c7bd14","fromNode":"f52028802645c50c","fromSide":"bottom","toNode":"fb8328b632c52ecb","toSide":"top"},
		{"id":"29ec34fdb95747cc","fromNode":"fb8328b632c52ecb","fromSide":"left","toNode":"fa14cbab07d50b7d","toSide":"right","toEnd":"none"},
		{"id":"06121b72a6971b87","fromNode":"807dd671043bfae3","fromSide":"bottom","toNode":"c5f6dd690883fac1","toSide":"left","color":"6"},
		{"id":"e98fb6f72744cfb4","fromNode":"c5f6dd690883fac1","fromSide":"right","toNode":"b09318e9fa994cfc","toSide":"left","toEnd":"none"},
		{"id":"8046e81a1485a5f3","fromNode":"6983111c207095fb","fromSide":"left","toNode":"d9d2fec1427e14c2","toSide":"right","toEnd":"none"},
		{"id":"b448e9480c654049","fromNode":"242102dd13ddb9db","fromSide":"bottom","toNode":"677cc9d56365aa7b","toSide":"top"},
		{"id":"ef22a16b818f2cc1","fromNode":"242102dd13ddb9db","fromSide":"left","toNode":"6983111c207095fb","toSide":"right"},
		{"id":"7d7f1e2d4b5f4347","fromNode":"242102dd13ddb9db","fromSide":"right","toNode":"7f7fa044d2b361d9","toSide":"left","toEnd":"none"},
		{"id":"31c609bcc68117ca","fromNode":"c5f6dd690883fac1","fromSide":"bottom","toNode":"ece604aadabd843d","toSide":"left"},
		{"id":"949ad2d2a0855ce8","fromNode":"ece604aadabd843d","fromSide":"right","toNode":"be5692d8d65a281c","toSide":"left","toEnd":"none"},
		{"id":"ebb9810c04cf4e6b","fromNode":"ece604aadabd843d","fromSide":"bottom","toNode":"cb4843f08764ec8c","toSide":"top","color":"5"},
		{"id":"b9518f0879bd2a77","fromNode":"ece604aadabd843d","fromSide":"bottom","toNode":"78578edfd1b0854e","toSide":"top","color":"6"},
		{"id":"a27122bb67655b51","fromNode":"cb4843f08764ec8c","fromSide":"right","toNode":"33274b6d31002528","toSide":"left","toEnd":"none"},
		{"id":"fc4b01be0a647ffa","fromNode":"78578edfd1b0854e","fromSide":"bottom","toNode":"436360e2958e10d3","toSide":"right","toEnd":"none"},
		{"id":"13519b77c46fcea7","fromNode":"f59cd45188cc0641","fromSide":"right","toNode":"30210672e8235d75","toSide":"left"},
		{"id":"80f3d54426ae8952","fromNode":"30210672e8235d75","fromSide":"right","toNode":"67dc7a56b8377782","toSide":"left","toEnd":"none"},
		{"id":"b5d90510c8fccfd9","fromNode":"67dc7a56b8377782","fromSide":"right","toNode":"91f525383508c006","toSide":"left"},
		{"id":"3733e2433db53be7","fromNode":"415fc2189e47b868","fromSide":"right","toNode":"c91fd75c6aaad0a3","toSide":"left","color":"5"},
		{"id":"15fbdfb21ce17f30","fromNode":"30210672e8235d75","fromSide":"bottom","toNode":"c91fd75c6aaad0a3","toSide":"top","fromEnd":"arrow"},
		{"id":"f69fe4e79ff02c99","fromNode":"b09318e9fa994cfc","fromSide":"right","toNode":"c91fd75c6aaad0a3","toSide":"left"},
		{"id":"356208e8c19539c8","fromNode":"c91fd75c6aaad0a3","fromSide":"right","toNode":"93926e5f97116af1","toSide":"left","toEnd":"none"},
		{"id":"3c47ce84e568a8b9","fromNode":"93926e5f97116af1","fromSide":"bottom","toNode":"a2ab887f7226b286","toSide":"top","color":"4"},
		{"id":"fb4a964ee3d37844","fromNode":"c91fd75c6aaad0a3","fromSide":"bottom","toNode":"38df4ea47a7257bd","toSide":"left"},
		{"id":"a476258b106f57e3","fromNode":"38df4ea47a7257bd","fromSide":"right","toNode":"e65931476800a35d","toSide":"left","toEnd":"none"},
		{"id":"a0904d87d383cd63","fromNode":"e65931476800a35d","fromSide":"right","toNode":"d1417e6e263a5872","toSide":"left"},
		{"id":"8f69bdd1d13b151f","fromNode":"38df4ea47a7257bd","fromSide":"bottom","toNode":"7245388ffc98096c","toSide":"top"},
		{"id":"9c023f04cabf9280","fromNode":"7245388ffc98096c","fromSide":"right","toNode":"e0d62e8945df2ffb","toSide":"left","toEnd":"none"},
		{"id":"5c5ed513e2133d2b","fromNode":"e0d62e8945df2ffb","fromSide":"bottom","toNode":"f082d2d65be1f50d","toSide":"left"},
		{"id":"0fa6a01adb0ce5d8","fromNode":"9727a6c7f2d737cf","fromSide":"top","toNode":"6fdbae0cf8239c0b","toSide":"bottom","toEnd":"none"},
		{"id":"bbf069264b7298e7","fromNode":"7245388ffc98096c","fromSide":"bottom","toNode":"73f29b98f29f8530","toSide":"top"},
		{"id":"547dc79947f3bbc0","fromNode":"73f29b98f29f8530","fromSide":"right","toNode":"b844117f47b2343b","toSide":"left","toEnd":"none"},
		{"id":"54e94d8af3eb10de","fromNode":"b844117f47b2343b","fromSide":"right","toNode":"635f81538cf6366e","toSide":"left"},
		{"id":"f8c89b879eeac363","fromNode":"d1417e6e263a5872","fromSide":"right","toNode":"73b66444416690ee","toSide":"top"},
		{"id":"c69dd6f199a47805","fromNode":"73b66444416690ee","fromSide":"bottom","toNode":"635f81538cf6366e","toSide":"top"},
		{"id":"dc7452a0acc9fd49","fromNode":"c91fd75c6aaad0a3","fromSide":"bottom","toNode":"fc87069edc9dc1aa","toSide":"top"},
		{"id":"d676b2cc76bf0c5d","fromNode":"fc87069edc9dc1aa","fromSide":"bottom","toNode":"22d3d4ab0f5b41c6","toSide":"top","toEnd":"none"},
		{"id":"6ccaef06bf7b5d71","fromNode":"22d3d4ab0f5b41c6","fromSide":"bottom","toNode":"3ae6bd38dbb76bf3","toSide":"top"},
		{"id":"01c1c89d979801b8","fromNode":"415fc2189e47b868","fromSide":"right","toNode":"e534e10d46e8a881","toSide":"left","color":"6"},
		{"id":"73d98cbf06bbe0e0","fromNode":"e534e10d46e8a881","fromSide":"right","toNode":"aa710e7e4394ae16","toSide":"left","toEnd":"none"},
		{"id":"b3da9a480d72387c","fromNode":"aa710e7e4394ae16","fromSide":"bottom","toNode":"c99af945f5c22c44","toSide":"top","color":"4"},
		{"id":"82a9e5d085009177","fromNode":"aa710e7e4394ae16","fromSide":"right","toNode":"dc626fb3bf337df3","toSide":"left"},
		{"id":"555cb7eba08a0e11","fromNode":"415fc2189e47b868","fromSide":"right","toNode":"ca35dca430028cf1","toSide":"left"},
		{"id":"772b96f60dfbc424","fromNode":"ca35dca430028cf1","fromSide":"right","toNode":"4932c80489dd7d49","toSide":"left","toEnd":"none"},
		{"id":"ff3bb2c77d8c031b","fromNode":"a8fd6df37b9a9521","fromSide":"bottom","toNode":"0ef8ee9c95d2262e","toSide":"right","color":"4"},
		{"id":"4374e789711d5937","fromNode":"4932c80489dd7d49","fromSide":"right","toNode":"a8fd6df37b9a9521","toSide":"left","color":"4"},
		{"id":"38fa54a55119f372","fromNode":"a8fd6df37b9a9521","fromSide":"right","toNode":"71d554cc7cf0e377","toSide":"left"},
		{"id":"c61f1650dbfa734b","fromNode":"71d554cc7cf0e377","fromSide":"right","toNode":"72edc3ea6a6bbf58","toSide":"left"},
		{"id":"945490b85ddc8fd4","fromNode":"677cc9d56365aa7b","fromSide":"right","toNode":"8edd467207479b96","toSide":"bottom","toEnd":"none"},
		{"id":"cce7a0688c26f970","fromNode":"677cc9d56365aa7b","fromSide":"right","toNode":"a19bceca609367dd","toSide":"left"},
		{"id":"c1228ac6add5b53d","fromNode":"a19bceca609367dd","fromSide":"top","toNode":"4f80f4dc3978ba11","toSide":"bottom","color":"6"},
		{"id":"fd9fb9410fead904","fromNode":"a19bceca609367dd","fromSide":"right","toNode":"df6db6b2f7375bef","toSide":"left","color":"3"},
		{"id":"552a7a34b837c894","fromNode":"e7ce041416ba9696","fromSide":"right","toNode":"df6db6b2f7375bef","toSide":"bottom"},
		{"id":"2f3c266163d50103","fromNode":"e7ce041416ba9696","fromSide":"left","toNode":"f340a4b5ee56d2cf","toSide":"right","color":"4"},
		{"id":"77ab908cc3510ea0","fromNode":"df6db6b2f7375bef","fromSide":"right","toNode":"bcdd5d9602f524d0","toSide":"left","color":"3"},
		{"id":"03e9a807c15e21e3","fromNode":"bcdd5d9602f524d0","fromSide":"right","toNode":"38979831b2190962","toSide":"left","color":"4"},
		{"id":"f63e90ef30a9b5f0","fromNode":"415fc2189e47b868","fromSide":"top","toNode":"f40e91e02fac268c","toSide":"left"},
		{"id":"14389c42aae0d463","fromNode":"178400f47c398744","fromSide":"right","toNode":"7455ad096ca14a48","toSide":"left","toEnd":"none"},
		{"id":"2c2c30168cfcc139","fromNode":"df6db6b2f7375bef","fromSide":"top","toNode":"bd759795a65a98b1","toSide":"bottom","toEnd":"none","color":"6"},
		{"id":"7caf6e82d2b8b7b9","fromNode":"f40e91e02fac268c","fromSide":"right","toNode":"178400f47c398744","toSide":"left"},
		{"id":"d2e6ff3e27aad20f","fromNode":"f40e91e02fac268c","fromSide":"right","toNode":"0976b082faa23825","toSide":"left"},
		{"id":"582c03d6b68a36e1","fromNode":"0976b082faa23825","fromSide":"right","toNode":"0bfa4abf41041855","toSide":"left","toEnd":"none"},
		{"id":"3bd0b395e5cb5874","fromNode":"677cc9d56365aa7b","fromSide":"left","toNode":"2f9cb209d3941818","toSide":"right","color":"5"},
		{"id":"74176a698da5d669","fromNode":"2f9cb209d3941818","fromSide":"bottom","toNode":"7a7af679168ec611","toSide":"top"},
		{"id":"10a68fbf26b7ad2a","fromNode":"7a7af679168ec611","fromSide":"bottom","toNode":"a5cb85b2e17d6968","toSide":"top","toEnd":"none"},
		{"id":"7b05d7d539ba1215","fromNode":"a5cb85b2e17d6968","fromSide":"bottom","toNode":"83b6e452a9f0132b","toSide":"right"},
		{"id":"11edd8d94cadbc9d","fromNode":"677cc9d56365aa7b","fromSide":"left","toNode":"ec94f51abe99b927","toSide":"right"},
		{"id":"7cb26410e144b182","fromNode":"ec94f51abe99b927","fromSide":"left","toNode":"69c7de07ecf1a190","toSide":"right","toEnd":"none"},
		{"id":"b8f6e488066508bf","fromNode":"2f9cb209d3941818","fromSide":"left","toNode":"611ce9b3761cd609","toSide":"right","color":"5"},
		{"id":"7f6b5a61e6b54edf","fromNode":"611ce9b3761cd609","fromSide":"bottom","toNode":"afa155d4b2b9450e","toSide":"top","toEnd":"none"},
		{"id":"be7148df4ab87ada","fromNode":"242102dd13ddb9db","fromSide":"bottom","toNode":"945da095d6803289","toSide":"top"},
		{"id":"2bb0e7d6b4624e92","fromNode":"945da095d6803289","fromSide":"right","toNode":"6025d70d56bf704c","toSide":"top","toEnd":"none"},
		{"id":"03c3ea8f7d7199ee","fromNode":"677cc9d56365aa7b","fromSide":"left","toNode":"a39a460f5166cd25","toSide":"right","color":"2"},
		{"id":"9e25ec3e60a2d76f","fromNode":"a39a460f5166cd25","fromSide":"left","toNode":"9d76285cadf93f13","toSide":"right"},
		{"id":"6623e1c6472b5555","fromNode":"677cc9d56365aa7b","fromSide":"left","toNode":"2346b783ae6fa345","toSide":"left","color":"3"},
		{"id":"34017ec21a9b6837","fromNode":"677cc9d56365aa7b","fromSide":"right","toNode":"e50e368ed7395484","toSide":"left"},
		{"id":"3138176267581d63","fromNode":"e50e368ed7395484","fromSide":"right","toNode":"633b11e4d31e8c0e","toSide":"left"}
	]
}